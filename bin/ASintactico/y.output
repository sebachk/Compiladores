   0  $accept : declaracion $end

   1  declaracion : sentencia_declar_funcion
   2              | bloque_sent

   3  bloque_sent : sentencia_ejec
   4              | bloque_funcion

   5  lista_sent : sentencia_ejec lista_sent
   6             | sentencia_ejec

   7  sentencia_ejec : asignacion ';'

   8  $$1 :

   9  sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF

  10  $$2 :

  11  sentencia_ejec : PRINT $$2 '(' cadena ')' ';'
  12                 | llamada_funcion ';'

  13  $$3 :

  14  sentencia_ejec : RETURN $$3 expresion ';'

  15  $$4 :

  16  sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond
  17                 | ';'

  18  llamada_funcion : ID '(' lista_parametros ')'
  19                  | ID '(' ')'

  20  sentencia_declarativa_tipo : tipo lista_var ';'

  21  lista_var : ID lista_var
  22            | ID

  23  bloque_IF : bloque_sent
  24            | bloque_sent ELSE bloque_sent

  25  cond : expresion comparador expresion

  26  comparador : '<'
  27             | '>'
  28             | MEN_IG
  29             | MAY_IG
  30             | IGUAL
  31             | DIST

  32  sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion
  33                           | FUNCTION ID '(' ')' bloque_funcion

  34  parametros : tipo parametro
  35             | tipo parametro parametros

  36  lista_parametros : parametro lista_parametros
  37                   | parametro

  38  parametro : ID

  39  bloque_funcion : BEGIN lista_sent END
  40                 | BEGIN lista_sent_declar lista_sent END

  41  lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar
  42                    | sentencia_declarativa_tipo

  43  asignacion : ID '=' expresion

  44  expresion : expresion '+' termino
  45            | expresion '-' termino
  46            | termino

  47  termino : termino '*' factor
  48          | termino '/' factor
  49          | factor

  50  factor : ID
  51         | CTE
  52         | llamada_funcion

  53  tipo : uint

state 0
	$accept : . declaracion $end  (0)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	FUNCTION  shift 5
	BEGIN  shift 6
	LOOP  shift 7
	';'  shift 8
	.  error

	declaracion  goto 9
	sentencia_declar_funcion  goto 10
	bloque_sent  goto 11
	sentencia_ejec  goto 12
	bloque_funcion  goto 13
	asignacion  goto 14
	llamada_funcion  goto 15


state 1
	llamada_funcion : ID . '(' lista_parametros ')'  (18)
	llamada_funcion : ID . '(' ')'  (19)
	asignacion : ID . '=' expresion  (43)

	'('  shift 16
	'='  shift 17
	.  error


state 2
	sentencia_ejec : IF . $$1 '(' cond ')' THEN bloque_IF  (9)
	$$1 : .  (8)

	.  reduce 8

	$$1  goto 18


state 3
	sentencia_ejec : PRINT . $$2 '(' cadena ')' ';'  (11)
	$$2 : .  (10)

	.  reduce 10

	$$2  goto 19


state 4
	sentencia_ejec : RETURN . $$3 expresion ';'  (14)
	$$3 : .  (13)

	.  reduce 13

	$$3  goto 20


state 5
	sentencia_declar_funcion : FUNCTION . ID '(' parametros ')' bloque_funcion  (32)
	sentencia_declar_funcion : FUNCTION . ID '(' ')' bloque_funcion  (33)

	ID  shift 21
	.  error


state 6
	bloque_funcion : BEGIN . lista_sent END  (39)
	bloque_funcion : BEGIN . lista_sent_declar lista_sent END  (40)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	LOOP  shift 7
	uint  shift 22
	';'  shift 8
	.  error

	sentencia_ejec  goto 23
	lista_sent  goto 24
	asignacion  goto 14
	llamada_funcion  goto 15
	sentencia_declarativa_tipo  goto 25
	tipo  goto 26
	lista_sent_declar  goto 27


state 7
	sentencia_ejec : LOOP . $$4 bloque_sent UNTIL cond  (16)
	$$4 : .  (15)

	.  reduce 15

	$$4  goto 28


state 8
	sentencia_ejec : ';' .  (17)

	.  reduce 17


state 9
	$accept : declaracion . $end  (0)

	$end  accept


state 10
	declaracion : sentencia_declar_funcion .  (1)

	.  reduce 1


state 11
	declaracion : bloque_sent .  (2)

	.  reduce 2


state 12
	bloque_sent : sentencia_ejec .  (3)

	.  reduce 3


state 13
	bloque_sent : bloque_funcion .  (4)

	.  reduce 4


state 14
	sentencia_ejec : asignacion . ';'  (7)

	';'  shift 29
	.  error


state 15
	sentencia_ejec : llamada_funcion . ';'  (12)

	';'  shift 30
	.  error


state 16
	llamada_funcion : ID '(' . lista_parametros ')'  (18)
	llamada_funcion : ID '(' . ')'  (19)

	ID  shift 31
	')'  shift 32
	.  error

	lista_parametros  goto 33
	parametro  goto 34


state 17
	asignacion : ID '=' . expresion  (43)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	expresion  goto 38
	termino  goto 39
	factor  goto 40


state 18
	sentencia_ejec : IF $$1 . '(' cond ')' THEN bloque_IF  (9)

	'('  shift 41
	.  error


state 19
	sentencia_ejec : PRINT $$2 . '(' cadena ')' ';'  (11)

	'('  shift 42
	.  error


state 20
	sentencia_ejec : RETURN $$3 . expresion ';'  (14)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	expresion  goto 43
	termino  goto 39
	factor  goto 40


state 21
	sentencia_declar_funcion : FUNCTION ID . '(' parametros ')' bloque_funcion  (32)
	sentencia_declar_funcion : FUNCTION ID . '(' ')' bloque_funcion  (33)

	'('  shift 44
	.  error


state 22
	tipo : uint .  (53)

	.  reduce 53


state 23
	lista_sent : sentencia_ejec . lista_sent  (5)
	lista_sent : sentencia_ejec .  (6)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	LOOP  shift 7
	';'  shift 8
	END  reduce 6

	sentencia_ejec  goto 23
	lista_sent  goto 45
	asignacion  goto 14
	llamada_funcion  goto 15


state 24
	bloque_funcion : BEGIN lista_sent . END  (39)

	END  shift 46
	.  error


state 25
	lista_sent_declar : sentencia_declarativa_tipo . lista_sent_declar  (41)
	lista_sent_declar : sentencia_declarativa_tipo .  (42)

	uint  shift 22
	ID  reduce 42
	IF  reduce 42
	PRINT  reduce 42
	RETURN  reduce 42
	LOOP  reduce 42
	';'  reduce 42

	sentencia_declarativa_tipo  goto 25
	tipo  goto 26
	lista_sent_declar  goto 47


state 26
	sentencia_declarativa_tipo : tipo . lista_var ';'  (20)

	ID  shift 48
	.  error

	lista_var  goto 49


state 27
	bloque_funcion : BEGIN lista_sent_declar . lista_sent END  (40)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	LOOP  shift 7
	';'  shift 8
	.  error

	sentencia_ejec  goto 23
	lista_sent  goto 50
	asignacion  goto 14
	llamada_funcion  goto 15


state 28
	sentencia_ejec : LOOP $$4 . bloque_sent UNTIL cond  (16)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	BEGIN  shift 6
	LOOP  shift 7
	';'  shift 8
	.  error

	bloque_sent  goto 51
	sentencia_ejec  goto 12
	bloque_funcion  goto 13
	asignacion  goto 14
	llamada_funcion  goto 15


state 29
	sentencia_ejec : asignacion ';' .  (7)

	.  reduce 7


state 30
	sentencia_ejec : llamada_funcion ';' .  (12)

	.  reduce 12


state 31
	parametro : ID .  (38)

	.  reduce 38


state 32
	llamada_funcion : ID '(' ')' .  (19)

	.  reduce 19


state 33
	llamada_funcion : ID '(' lista_parametros . ')'  (18)

	')'  shift 52
	.  error


state 34
	lista_parametros : parametro . lista_parametros  (36)
	lista_parametros : parametro .  (37)

	ID  shift 31
	')'  reduce 37

	lista_parametros  goto 53
	parametro  goto 34


state 35
	llamada_funcion : ID . '(' lista_parametros ')'  (18)
	llamada_funcion : ID . '(' ')'  (19)
	factor : ID .  (50)

	'('  shift 16
	$end  reduce 50
	ID  reduce 50
	IF  reduce 50
	ELSE  reduce 50
	PRINT  reduce 50
	RETURN  reduce 50
	END  reduce 50
	LOOP  reduce 50
	UNTIL  reduce 50
	MAY_IG  reduce 50
	MEN_IG  reduce 50
	DIST  reduce 50
	IGUAL  reduce 50
	';'  reduce 50
	')'  reduce 50
	'<'  reduce 50
	'>'  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	'*'  reduce 50
	'/'  reduce 50


state 36
	factor : CTE .  (51)

	.  reduce 51


state 37
	factor : llamada_funcion .  (52)

	.  reduce 52


state 38
	asignacion : ID '=' expresion .  (43)
	expresion : expresion . '+' termino  (44)
	expresion : expresion . '-' termino  (45)

	'+'  shift 54
	'-'  shift 55
	';'  reduce 43


state 39
	expresion : termino .  (46)
	termino : termino . '*' factor  (47)
	termino : termino . '/' factor  (48)

	'*'  shift 56
	'/'  shift 57
	$end  reduce 46
	ID  reduce 46
	IF  reduce 46
	ELSE  reduce 46
	PRINT  reduce 46
	RETURN  reduce 46
	END  reduce 46
	LOOP  reduce 46
	UNTIL  reduce 46
	MAY_IG  reduce 46
	MEN_IG  reduce 46
	DIST  reduce 46
	IGUAL  reduce 46
	';'  reduce 46
	')'  reduce 46
	'<'  reduce 46
	'>'  reduce 46
	'+'  reduce 46
	'-'  reduce 46


state 40
	termino : factor .  (49)

	.  reduce 49


state 41
	sentencia_ejec : IF $$1 '(' . cond ')' THEN bloque_IF  (9)

	ID  shift 35
	CTE  shift 36
	.  error

	cond  goto 58
	llamada_funcion  goto 37
	expresion  goto 59
	termino  goto 39
	factor  goto 40


state 42
	sentencia_ejec : PRINT $$2 '(' . cadena ')' ';'  (11)

	cadena  shift 60
	.  error


state 43
	sentencia_ejec : RETURN $$3 expresion . ';'  (14)
	expresion : expresion . '+' termino  (44)
	expresion : expresion . '-' termino  (45)

	';'  shift 61
	'+'  shift 54
	'-'  shift 55
	.  error


state 44
	sentencia_declar_funcion : FUNCTION ID '(' . parametros ')' bloque_funcion  (32)
	sentencia_declar_funcion : FUNCTION ID '(' . ')' bloque_funcion  (33)

	uint  shift 22
	')'  shift 62
	.  error

	tipo  goto 63
	parametros  goto 64


state 45
	lista_sent : sentencia_ejec lista_sent .  (5)

	.  reduce 5


state 46
	bloque_funcion : BEGIN lista_sent END .  (39)

	.  reduce 39


state 47
	lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar .  (41)

	.  reduce 41


state 48
	lista_var : ID . lista_var  (21)
	lista_var : ID .  (22)

	ID  shift 48
	';'  reduce 22

	lista_var  goto 65


state 49
	sentencia_declarativa_tipo : tipo lista_var . ';'  (20)

	';'  shift 66
	.  error


state 50
	bloque_funcion : BEGIN lista_sent_declar lista_sent . END  (40)

	END  shift 67
	.  error


state 51
	sentencia_ejec : LOOP $$4 bloque_sent . UNTIL cond  (16)

	UNTIL  shift 68
	.  error


state 52
	llamada_funcion : ID '(' lista_parametros ')' .  (18)

	.  reduce 18


state 53
	lista_parametros : parametro lista_parametros .  (36)

	.  reduce 36


state 54
	expresion : expresion '+' . termino  (44)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	termino  goto 69
	factor  goto 40


state 55
	expresion : expresion '-' . termino  (45)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	termino  goto 70
	factor  goto 40


state 56
	termino : termino '*' . factor  (47)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	factor  goto 71


state 57
	termino : termino '/' . factor  (48)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	factor  goto 72


state 58
	sentencia_ejec : IF $$1 '(' cond . ')' THEN bloque_IF  (9)

	')'  shift 73
	.  error


state 59
	cond : expresion . comparador expresion  (25)
	expresion : expresion . '+' termino  (44)
	expresion : expresion . '-' termino  (45)

	MAY_IG  shift 74
	MEN_IG  shift 75
	DIST  shift 76
	IGUAL  shift 77
	'<'  shift 78
	'>'  shift 79
	'+'  shift 54
	'-'  shift 55
	.  error

	comparador  goto 80


state 60
	sentencia_ejec : PRINT $$2 '(' cadena . ')' ';'  (11)

	')'  shift 81
	.  error


state 61
	sentencia_ejec : RETURN $$3 expresion ';' .  (14)

	.  reduce 14


state 62
	sentencia_declar_funcion : FUNCTION ID '(' ')' . bloque_funcion  (33)

	BEGIN  shift 6
	.  error

	bloque_funcion  goto 82


state 63
	parametros : tipo . parametro  (34)
	parametros : tipo . parametro parametros  (35)

	ID  shift 31
	.  error

	parametro  goto 83


state 64
	sentencia_declar_funcion : FUNCTION ID '(' parametros . ')' bloque_funcion  (32)

	')'  shift 84
	.  error


state 65
	lista_var : ID lista_var .  (21)

	.  reduce 21


state 66
	sentencia_declarativa_tipo : tipo lista_var ';' .  (20)

	.  reduce 20


state 67
	bloque_funcion : BEGIN lista_sent_declar lista_sent END .  (40)

	.  reduce 40


state 68
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL . cond  (16)

	ID  shift 35
	CTE  shift 36
	.  error

	cond  goto 85
	llamada_funcion  goto 37
	expresion  goto 59
	termino  goto 39
	factor  goto 40


state 69
	expresion : expresion '+' termino .  (44)
	termino : termino . '*' factor  (47)
	termino : termino . '/' factor  (48)

	'*'  shift 56
	'/'  shift 57
	$end  reduce 44
	ID  reduce 44
	IF  reduce 44
	ELSE  reduce 44
	PRINT  reduce 44
	RETURN  reduce 44
	END  reduce 44
	LOOP  reduce 44
	UNTIL  reduce 44
	MAY_IG  reduce 44
	MEN_IG  reduce 44
	DIST  reduce 44
	IGUAL  reduce 44
	';'  reduce 44
	')'  reduce 44
	'<'  reduce 44
	'>'  reduce 44
	'+'  reduce 44
	'-'  reduce 44


state 70
	expresion : expresion '-' termino .  (45)
	termino : termino . '*' factor  (47)
	termino : termino . '/' factor  (48)

	'*'  shift 56
	'/'  shift 57
	$end  reduce 45
	ID  reduce 45
	IF  reduce 45
	ELSE  reduce 45
	PRINT  reduce 45
	RETURN  reduce 45
	END  reduce 45
	LOOP  reduce 45
	UNTIL  reduce 45
	MAY_IG  reduce 45
	MEN_IG  reduce 45
	DIST  reduce 45
	IGUAL  reduce 45
	';'  reduce 45
	')'  reduce 45
	'<'  reduce 45
	'>'  reduce 45
	'+'  reduce 45
	'-'  reduce 45


state 71
	termino : termino '*' factor .  (47)

	.  reduce 47


state 72
	termino : termino '/' factor .  (48)

	.  reduce 48


state 73
	sentencia_ejec : IF $$1 '(' cond ')' . THEN bloque_IF  (9)

	THEN  shift 86
	.  error


state 74
	comparador : MAY_IG .  (29)

	.  reduce 29


state 75
	comparador : MEN_IG .  (28)

	.  reduce 28


state 76
	comparador : DIST .  (31)

	.  reduce 31


state 77
	comparador : IGUAL .  (30)

	.  reduce 30


state 78
	comparador : '<' .  (26)

	.  reduce 26


state 79
	comparador : '>' .  (27)

	.  reduce 27


state 80
	cond : expresion comparador . expresion  (25)

	ID  shift 35
	CTE  shift 36
	.  error

	llamada_funcion  goto 37
	expresion  goto 87
	termino  goto 39
	factor  goto 40


state 81
	sentencia_ejec : PRINT $$2 '(' cadena ')' . ';'  (11)

	';'  shift 88
	.  error


state 82
	sentencia_declar_funcion : FUNCTION ID '(' ')' bloque_funcion .  (33)

	.  reduce 33


state 83
	parametros : tipo parametro .  (34)
	parametros : tipo parametro . parametros  (35)

	uint  shift 22
	')'  reduce 34

	tipo  goto 63
	parametros  goto 89


state 84
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' . bloque_funcion  (32)

	BEGIN  shift 6
	.  error

	bloque_funcion  goto 90


state 85
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond .  (16)

	.  reduce 16


state 86
	sentencia_ejec : IF $$1 '(' cond ')' THEN . bloque_IF  (9)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	BEGIN  shift 6
	LOOP  shift 7
	';'  shift 8
	.  error

	bloque_sent  goto 91
	sentencia_ejec  goto 12
	bloque_funcion  goto 13
	asignacion  goto 14
	bloque_IF  goto 92
	llamada_funcion  goto 15


state 87
	cond : expresion comparador expresion .  (25)
	expresion : expresion . '+' termino  (44)
	expresion : expresion . '-' termino  (45)

	'+'  shift 54
	'-'  shift 55
	$end  reduce 25
	ID  reduce 25
	IF  reduce 25
	ELSE  reduce 25
	PRINT  reduce 25
	RETURN  reduce 25
	END  reduce 25
	LOOP  reduce 25
	UNTIL  reduce 25
	';'  reduce 25
	')'  reduce 25


state 88
	sentencia_ejec : PRINT $$2 '(' cadena ')' ';' .  (11)

	.  reduce 11


state 89
	parametros : tipo parametro parametros .  (35)

	.  reduce 35


state 90
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion .  (32)

	.  reduce 32


state 91
	bloque_IF : bloque_sent .  (23)
	bloque_IF : bloque_sent . ELSE bloque_sent  (24)

	ELSE  shift 93
	$end  reduce 23
	ID  reduce 23
	IF  reduce 23
	PRINT  reduce 23
	RETURN  reduce 23
	END  reduce 23
	LOOP  reduce 23
	UNTIL  reduce 23
	';'  reduce 23


state 92
	sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF .  (9)

	.  reduce 9


state 93
	bloque_IF : bloque_sent ELSE . bloque_sent  (24)

	ID  shift 1
	IF  shift 2
	PRINT  shift 3
	RETURN  shift 4
	BEGIN  shift 6
	LOOP  shift 7
	';'  shift 8
	.  error

	bloque_sent  goto 94
	sentencia_ejec  goto 12
	bloque_funcion  goto 13
	asignacion  goto 14
	llamada_funcion  goto 15


state 94
	bloque_IF : bloque_sent ELSE bloque_sent .  (24)

	.  reduce 24


30 terminals, 26 nonterminals
54 grammar rules, 95 states
