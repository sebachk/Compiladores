   0  $accept : programa $end

   1  programa : BEGIN lista_declaraciones END

   2  lista_declaraciones : declaracion
   3                      | declaracion lista_declaraciones

   4  declaracion : sentencia_declar_funcion
   5              | bloque_sent

   6  sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion
   7                           | FUNCTION ID '(' ')' bloque_funcion
   8                           | FUNCTION error ')'
   9                           | FUNCTION error bloque_funcion

  10  bloque_sent : sentencia_ejec
  11              | bloque_funcion

  12  bloque_funcion : BEGIN lista_sentencias END

  13  $$1 :

  14  bloque_funcion : BEGIN lista_sentencias $$1 bloque_funcion

  15  $$2 :

  16  bloque_funcion : BEGIN lista_sentencias $$2 sentencia_declar_funcion

  17  lista_sentencias : lista_sent_ejec
  18                   | lista_sent_declar lista_sent_ejec

  19  lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar
  20                    | sentencia_declarativa_tipo

  21  sentencia_declarativa_tipo : tipo lista_var ';'
  22                             | tipo error ';'

  23  $$3 :

  24  sentencia_declarativa_tipo : tipo lista_var $$3 sent_correcta

  25  $$4 :

  26  sentencia_declarativa_tipo : tipo lista_var $$4 sentencia_declarativa_tipo

  27  lista_sent_ejec : sentencia_ejec lista_sent_ejec
  28                  | sentencia_ejec

  29  sentencia_ejec : sentencia_simple
  30                 | sentencia_comp

  31  sentencia_simple : sent_correcta

  32  $$5 :

  33  sentencia_simple : sent_abierta $$5 sent_correcta

  34  $$6 :

  35  sentencia_simple : sent_abierta $$6 sentencia_comp

  36  $$7 :

  37  sent_abierta : PRINT $$7 '(' cadena ')'
  38               | llamada_funcion

  39  $$8 :

  40  sent_abierta : RETURN $$8 expresion
  41               | asignacion

  42  sent_correcta : sent_abierta ';'
  43                | error ';'

  44  sentencia_comp : sentencia_if
  45                 | sentencia_loop

  46  $$9 :

  47  sentencia_if : IF '(' cond ')' $$9 THEN bloque_IF
  48               | sentencia_if_error

  49  $$10 :

  50  sentencia_if_error : IF THEN $$10 bloque_IF

  51  $$11 :

  52  sentencia_if_error : IF cond ')' $$11 THEN bloque_IF

  53  $$12 :

  54  sentencia_if_error : IF '(' cond $$12 THEN bloque_IF

  55  $$13 :

  56  sentencia_if_error : IF cond $$13 THEN bloque_IF

  57  $$14 :

  58  sentencia_if_error : IF '(' cond ')' $$14 bloque_IF

  59  $$15 :

  60  sentencia_if_error : IF error $$15 bloque_IF

  61  $$16 :

  62  sentencia_loop : LOOP $$16 bloque_loop

  63  bloque_loop : bloque_sent UNTIL cond
  64              | loop_error

  65  loop_error : bloque_sent cond
  66             | bloque_sent UNTIL error
  67             | bloque_sent error

  68  llamada_funcion : ID '(' lista_parametros ')'
  69                  | ID '(' ')'

  70  lista_var : ID ',' lista_var
  71            | ID

  72  bloque_IF : bloque_sent
  73            | bloque_sent ELSE bloque_sent
  74            | ID bloque_IF

  75  cond : expresion comparador expresion

  76  comparador : '<'
  77             | '>'
  78             | MEN_IG
  79             | MAY_IG
  80             | IGUAL
  81             | DIST

  82  parametros : tipo ID
  83             | tipo ID ',' parametros

  84  lista_parametros : parametro ',' lista_parametros
  85                   | parametro

  86  parametro : expresion

  87  asignacion : ID '=' expresion

  88  expresion : expresion '+' termino
  89            | expresion '-' termino
  90            | termino

  91  termino : termino '*' factor
  92          | termino '/' factor
  93          | factor

  94  factor : ID
  95         | CTE
  96         | llamada_funcion

  97  tipo : uint

state 0
	$accept : . programa $end  (0)

	BEGIN  shift 1
	.  error

	programa  goto 2


state 1
	programa : BEGIN . lista_declaraciones END  (1)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FUNCTION  shift 8
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	lista_declaraciones  goto 11
	declaracion  goto 12
	sentencia_declar_funcion  goto 13
	bloque_sent  goto 14
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	sent_correcta : error . ';'  (43)

	';'  shift 26
	.  error


state 4
	llamada_funcion : ID . '(' lista_parametros ')'  (68)
	llamada_funcion : ID . '(' ')'  (69)
	asignacion : ID . '=' expresion  (87)

	'('  shift 27
	'='  shift 28
	.  error


state 5
	sentencia_if : IF . '(' cond ')' $$9 THEN bloque_IF  (47)
	sentencia_if_error : IF . THEN $$10 bloque_IF  (50)
	sentencia_if_error : IF . cond ')' $$11 THEN bloque_IF  (52)
	sentencia_if_error : IF . '(' cond $$12 THEN bloque_IF  (54)
	sentencia_if_error : IF . cond $$13 THEN bloque_IF  (56)
	sentencia_if_error : IF . '(' cond ')' $$14 bloque_IF  (58)
	sentencia_if_error : IF . error $$15 bloque_IF  (60)

	error  shift 29
	ID  shift 30
	CTE  shift 31
	THEN  shift 32
	'('  shift 33
	.  error

	llamada_funcion  goto 34
	expresion  goto 35
	cond  goto 36
	termino  goto 37
	factor  goto 38


state 6
	sent_abierta : PRINT . $$7 '(' cadena ')'  (37)
	$$7 : .  (36)

	.  reduce 36

	$$7  goto 39


state 7
	sent_abierta : RETURN . $$8 expresion  (40)
	$$8 : .  (39)

	.  reduce 39

	$$8  goto 40


state 8
	sentencia_declar_funcion : FUNCTION . ID '(' parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION . ID '(' ')' bloque_funcion  (7)
	sentencia_declar_funcion : FUNCTION . error ')'  (8)
	sentencia_declar_funcion : FUNCTION . error bloque_funcion  (9)

	error  shift 41
	ID  shift 42
	.  error


state 9
	bloque_funcion : BEGIN . lista_sentencias END  (12)
	bloque_funcion : BEGIN . lista_sentencias $$1 bloque_funcion  (14)
	bloque_funcion : BEGIN . lista_sentencias $$2 sentencia_declar_funcion  (16)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	uint  shift 43
	.  error

	sentencia_ejec  goto 44
	lista_sentencias  goto 45
	lista_sent_ejec  goto 46
	lista_sent_declar  goto 47
	sentencia_declarativa_tipo  goto 48
	tipo  goto 49
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 10
	sentencia_loop : LOOP . $$16 bloque_loop  (62)
	$$16 : .  (61)

	.  reduce 61

	$$16  goto 50


state 11
	programa : BEGIN lista_declaraciones . END  (1)

	END  shift 51
	.  error


state 12
	lista_declaraciones : declaracion .  (2)
	lista_declaraciones : declaracion . lista_declaraciones  (3)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FUNCTION  shift 8
	BEGIN  shift 9
	LOOP  shift 10
	END  reduce 2

	lista_declaraciones  goto 52
	declaracion  goto 12
	sentencia_declar_funcion  goto 13
	bloque_sent  goto 14
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 13
	declaracion : sentencia_declar_funcion .  (4)

	.  reduce 4


state 14
	declaracion : bloque_sent .  (5)

	.  reduce 5


state 15
	bloque_sent : bloque_funcion .  (11)

	.  reduce 11


state 16
	bloque_sent : sentencia_ejec .  (10)

	.  reduce 10


state 17
	sentencia_simple : sent_correcta .  (31)

	.  reduce 31


state 18
	sentencia_ejec : sentencia_simple .  (29)

	.  reduce 29


state 19
	sentencia_ejec : sentencia_comp .  (30)

	.  reduce 30


state 20
	sentencia_simple : sent_abierta . $$5 sent_correcta  (33)
	sentencia_simple : sent_abierta . $$6 sentencia_comp  (35)
	sent_correcta : sent_abierta . ';'  (42)
	$$5 : .  (32)
	$$6 : .  (34)

	';'  shift 53
	error  reduce 32
	ID  reduce 32
	IF  reduce 34
	PRINT  reduce 32
	RETURN  reduce 32
	LOOP  reduce 34

	$$5  goto 54
	$$6  goto 55


state 21
	sent_abierta : llamada_funcion .  (38)

	.  reduce 38


state 22
	sent_abierta : asignacion .  (41)

	.  reduce 41


state 23
	sentencia_comp : sentencia_if .  (44)

	.  reduce 44


state 24
	sentencia_comp : sentencia_loop .  (45)

	.  reduce 45


state 25
	sentencia_if : sentencia_if_error .  (48)

	.  reduce 48


state 26
	sent_correcta : error ';' .  (43)

	.  reduce 43


state 27
	llamada_funcion : ID '(' . lista_parametros ')'  (68)
	llamada_funcion : ID '(' . ')'  (69)

	ID  shift 30
	CTE  shift 31
	')'  shift 56
	.  error

	llamada_funcion  goto 34
	expresion  goto 57
	lista_parametros  goto 58
	parametro  goto 59
	termino  goto 37
	factor  goto 38


state 28
	asignacion : ID '=' . expresion  (87)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 60
	termino  goto 37
	factor  goto 38


state 29
	sentencia_if_error : IF error . $$15 bloque_IF  (60)
	$$15 : .  (59)

	.  reduce 59

	$$15  goto 61


state 30
	llamada_funcion : ID . '(' lista_parametros ')'  (68)
	llamada_funcion : ID . '(' ')'  (69)
	factor : ID .  (94)

	'('  shift 27
	error  reduce 94
	ID  reduce 94
	CTE  reduce 94
	IF  reduce 94
	THEN  reduce 94
	ELSE  reduce 94
	PRINT  reduce 94
	RETURN  reduce 94
	FUNCTION  reduce 94
	BEGIN  reduce 94
	END  reduce 94
	LOOP  reduce 94
	UNTIL  reduce 94
	MAY_IG  reduce 94
	MEN_IG  reduce 94
	DIST  reduce 94
	IGUAL  reduce 94
	')'  reduce 94
	';'  reduce 94
	','  reduce 94
	'<'  reduce 94
	'>'  reduce 94
	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94


state 31
	factor : CTE .  (95)

	.  reduce 95


state 32
	sentencia_if_error : IF THEN . $$10 bloque_IF  (50)
	$$10 : .  (49)

	.  reduce 49

	$$10  goto 62


state 33
	sentencia_if : IF '(' . cond ')' $$9 THEN bloque_IF  (47)
	sentencia_if_error : IF '(' . cond $$12 THEN bloque_IF  (54)
	sentencia_if_error : IF '(' . cond ')' $$14 bloque_IF  (58)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 35
	cond  goto 63
	termino  goto 37
	factor  goto 38


state 34
	factor : llamada_funcion .  (96)

	.  reduce 96


state 35
	cond : expresion . comparador expresion  (75)
	expresion : expresion . '+' termino  (88)
	expresion : expresion . '-' termino  (89)

	MAY_IG  shift 64
	MEN_IG  shift 65
	DIST  shift 66
	IGUAL  shift 67
	'<'  shift 68
	'>'  shift 69
	'+'  shift 70
	'-'  shift 71
	.  error

	comparador  goto 72


state 36
	sentencia_if_error : IF cond . ')' $$11 THEN bloque_IF  (52)
	sentencia_if_error : IF cond . $$13 THEN bloque_IF  (56)
	$$13 : .  (55)

	')'  shift 73
	THEN  reduce 55

	$$13  goto 74


state 37
	expresion : termino .  (90)
	termino : termino . '*' factor  (91)
	termino : termino . '/' factor  (92)

	'*'  shift 75
	'/'  shift 76
	error  reduce 90
	ID  reduce 90
	CTE  reduce 90
	IF  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	PRINT  reduce 90
	RETURN  reduce 90
	FUNCTION  reduce 90
	BEGIN  reduce 90
	END  reduce 90
	LOOP  reduce 90
	UNTIL  reduce 90
	MAY_IG  reduce 90
	MEN_IG  reduce 90
	DIST  reduce 90
	IGUAL  reduce 90
	')'  reduce 90
	';'  reduce 90
	','  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	'+'  reduce 90
	'-'  reduce 90


state 38
	termino : factor .  (93)

	.  reduce 93


state 39
	sent_abierta : PRINT $$7 . '(' cadena ')'  (37)

	'('  shift 77
	.  error


state 40
	sent_abierta : RETURN $$8 . expresion  (40)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 78
	termino  goto 37
	factor  goto 38


state 41
	sentencia_declar_funcion : FUNCTION error . ')'  (8)
	sentencia_declar_funcion : FUNCTION error . bloque_funcion  (9)

	BEGIN  shift 9
	')'  shift 79
	.  error

	bloque_funcion  goto 80


state 42
	sentencia_declar_funcion : FUNCTION ID . '(' parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION ID . '(' ')' bloque_funcion  (7)

	'('  shift 81
	.  error


state 43
	tipo : uint .  (97)

	.  reduce 97


state 44
	lista_sent_ejec : sentencia_ejec . lista_sent_ejec  (27)
	lista_sent_ejec : sentencia_ejec .  (28)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	FUNCTION  reduce 28
	BEGIN  reduce 28
	END  reduce 28

	sentencia_ejec  goto 44
	lista_sent_ejec  goto 82
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 45
	bloque_funcion : BEGIN lista_sentencias . END  (12)
	bloque_funcion : BEGIN lista_sentencias . $$1 bloque_funcion  (14)
	bloque_funcion : BEGIN lista_sentencias . $$2 sentencia_declar_funcion  (16)
	$$1 : .  (13)
	$$2 : .  (15)

	END  shift 83
	FUNCTION  reduce 15
	BEGIN  reduce 13

	$$1  goto 84
	$$2  goto 85


state 46
	lista_sentencias : lista_sent_ejec .  (17)

	.  reduce 17


state 47
	lista_sentencias : lista_sent_declar . lista_sent_ejec  (18)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	.  error

	sentencia_ejec  goto 44
	lista_sent_ejec  goto 86
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 48
	lista_sent_declar : sentencia_declarativa_tipo . lista_sent_declar  (19)
	lista_sent_declar : sentencia_declarativa_tipo .  (20)

	uint  shift 43
	error  reduce 20
	ID  reduce 20
	IF  reduce 20
	PRINT  reduce 20
	RETURN  reduce 20
	LOOP  reduce 20

	lista_sent_declar  goto 87
	sentencia_declarativa_tipo  goto 48
	tipo  goto 49


state 49
	sentencia_declarativa_tipo : tipo . lista_var ';'  (21)
	sentencia_declarativa_tipo : tipo . error ';'  (22)
	sentencia_declarativa_tipo : tipo . lista_var $$3 sent_correcta  (24)
	sentencia_declarativa_tipo : tipo . lista_var $$4 sentencia_declarativa_tipo  (26)

	error  shift 88
	ID  shift 89
	.  error

	lista_var  goto 90


state 50
	sentencia_loop : LOOP $$16 . bloque_loop  (62)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 91
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25
	bloque_loop  goto 92
	loop_error  goto 93


state 51
	programa : BEGIN lista_declaraciones END .  (1)

	.  reduce 1


state 52
	lista_declaraciones : declaracion lista_declaraciones .  (3)

	.  reduce 3


state 53
	sent_correcta : sent_abierta ';' .  (42)

	.  reduce 42


state 54
	sentencia_simple : sent_abierta $$5 . sent_correcta  (33)

	error  shift 3
	ID  shift 4
	PRINT  shift 6
	RETURN  shift 7
	.  error

	sent_correcta  goto 94
	sent_abierta  goto 95
	llamada_funcion  goto 21
	asignacion  goto 22


state 55
	sentencia_simple : sent_abierta $$6 . sentencia_comp  (35)

	IF  shift 5
	LOOP  shift 10
	.  error

	sentencia_comp  goto 96
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 56
	llamada_funcion : ID '(' ')' .  (69)

	.  reduce 69


state 57
	parametro : expresion .  (86)
	expresion : expresion . '+' termino  (88)
	expresion : expresion . '-' termino  (89)

	'+'  shift 70
	'-'  shift 71
	')'  reduce 86
	','  reduce 86


state 58
	llamada_funcion : ID '(' lista_parametros . ')'  (68)

	')'  shift 97
	.  error


state 59
	lista_parametros : parametro . ',' lista_parametros  (84)
	lista_parametros : parametro .  (85)

	','  shift 98
	')'  reduce 85


state 60
	asignacion : ID '=' expresion .  (87)
	expresion : expresion . '+' termino  (88)
	expresion : expresion . '-' termino  (89)

	'+'  shift 70
	'-'  shift 71
	error  reduce 87
	ID  reduce 87
	IF  reduce 87
	PRINT  reduce 87
	RETURN  reduce 87
	LOOP  reduce 87
	';'  reduce 87


state 61
	sentencia_if_error : IF error $$15 . bloque_IF  (60)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 101
	sentencia_if_error  goto 25


state 62
	sentencia_if_error : IF THEN $$10 . bloque_IF  (50)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 102
	sentencia_if_error  goto 25


state 63
	sentencia_if : IF '(' cond . ')' $$9 THEN bloque_IF  (47)
	sentencia_if_error : IF '(' cond . $$12 THEN bloque_IF  (54)
	sentencia_if_error : IF '(' cond . ')' $$14 bloque_IF  (58)
	$$12 : .  (53)

	')'  shift 103
	THEN  reduce 53

	$$12  goto 104


state 64
	comparador : MAY_IG .  (79)

	.  reduce 79


state 65
	comparador : MEN_IG .  (78)

	.  reduce 78


state 66
	comparador : DIST .  (81)

	.  reduce 81


state 67
	comparador : IGUAL .  (80)

	.  reduce 80


state 68
	comparador : '<' .  (76)

	.  reduce 76


state 69
	comparador : '>' .  (77)

	.  reduce 77


state 70
	expresion : expresion '+' . termino  (88)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	termino  goto 105
	factor  goto 38


state 71
	expresion : expresion '-' . termino  (89)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	termino  goto 106
	factor  goto 38


state 72
	cond : expresion comparador . expresion  (75)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 107
	termino  goto 37
	factor  goto 38


state 73
	sentencia_if_error : IF cond ')' . $$11 THEN bloque_IF  (52)
	$$11 : .  (51)

	.  reduce 51

	$$11  goto 108


state 74
	sentencia_if_error : IF cond $$13 . THEN bloque_IF  (56)

	THEN  shift 109
	.  error


state 75
	termino : termino '*' . factor  (91)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	factor  goto 110


state 76
	termino : termino '/' . factor  (92)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	factor  goto 111


state 77
	sent_abierta : PRINT $$7 '(' . cadena ')'  (37)

	cadena  shift 112
	.  error


state 78
	sent_abierta : RETURN $$8 expresion .  (40)
	expresion : expresion . '+' termino  (88)
	expresion : expresion . '-' termino  (89)

	'+'  shift 70
	'-'  shift 71
	error  reduce 40
	ID  reduce 40
	IF  reduce 40
	PRINT  reduce 40
	RETURN  reduce 40
	LOOP  reduce 40
	';'  reduce 40


state 79
	sentencia_declar_funcion : FUNCTION error ')' .  (8)

	.  reduce 8


state 80
	sentencia_declar_funcion : FUNCTION error bloque_funcion .  (9)

	.  reduce 9


state 81
	sentencia_declar_funcion : FUNCTION ID '(' . parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION ID '(' . ')' bloque_funcion  (7)

	uint  shift 43
	')'  shift 113
	.  error

	parametros  goto 114
	tipo  goto 115


state 82
	lista_sent_ejec : sentencia_ejec lista_sent_ejec .  (27)

	.  reduce 27


state 83
	bloque_funcion : BEGIN lista_sentencias END .  (12)

	.  reduce 12


state 84
	bloque_funcion : BEGIN lista_sentencias $$1 . bloque_funcion  (14)

	BEGIN  shift 9
	.  error

	bloque_funcion  goto 116


state 85
	bloque_funcion : BEGIN lista_sentencias $$2 . sentencia_declar_funcion  (16)

	FUNCTION  shift 8
	.  error

	sentencia_declar_funcion  goto 117


state 86
	lista_sentencias : lista_sent_declar lista_sent_ejec .  (18)

	.  reduce 18


state 87
	lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar .  (19)

	.  reduce 19


state 88
	sentencia_declarativa_tipo : tipo error . ';'  (22)

	';'  shift 118
	.  error


state 89
	lista_var : ID . ',' lista_var  (70)
	lista_var : ID .  (71)

	','  shift 119
	error  reduce 71
	ID  reduce 71
	PRINT  reduce 71
	RETURN  reduce 71
	uint  reduce 71
	';'  reduce 71


state 90
	sentencia_declarativa_tipo : tipo lista_var . ';'  (21)
	sentencia_declarativa_tipo : tipo lista_var . $$3 sent_correcta  (24)
	sentencia_declarativa_tipo : tipo lista_var . $$4 sentencia_declarativa_tipo  (26)
	$$3 : .  (23)
	$$4 : .  (25)

	';'  shift 120
	error  reduce 23
	ID  reduce 23
	PRINT  reduce 23
	RETURN  reduce 23
	uint  reduce 25

	$$3  goto 121
	$$4  goto 122


state 91
	bloque_loop : bloque_sent . UNTIL cond  (63)
	loop_error : bloque_sent . cond  (65)
	loop_error : bloque_sent . UNTIL error  (66)
	loop_error : bloque_sent . error  (67)

	error  shift 123
	ID  shift 30
	CTE  shift 31
	UNTIL  shift 124
	.  error

	llamada_funcion  goto 34
	expresion  goto 35
	cond  goto 125
	termino  goto 37
	factor  goto 38


state 92
	sentencia_loop : LOOP $$16 bloque_loop .  (62)

	.  reduce 62


state 93
	bloque_loop : loop_error .  (64)

	.  reduce 64


state 94
	sentencia_simple : sent_abierta $$5 sent_correcta .  (33)

	.  reduce 33


state 95
	sent_correcta : sent_abierta . ';'  (42)

	';'  shift 53
	.  error


state 96
	sentencia_simple : sent_abierta $$6 sentencia_comp .  (35)

	.  reduce 35


state 97
	llamada_funcion : ID '(' lista_parametros ')' .  (68)

	.  reduce 68


state 98
	lista_parametros : parametro ',' . lista_parametros  (84)

	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 57
	lista_parametros  goto 126
	parametro  goto 59
	termino  goto 37
	factor  goto 38


state 99
	llamada_funcion : ID . '(' lista_parametros ')'  (68)
	llamada_funcion : ID . '(' ')'  (69)
	bloque_IF : ID . bloque_IF  (74)
	asignacion : ID . '=' expresion  (87)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	'('  shift 27
	'='  shift 28
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 127
	sentencia_if_error  goto 25


state 100
	bloque_IF : bloque_sent .  (72)
	bloque_IF : bloque_sent . ELSE bloque_sent  (73)

	ELSE  shift 128
	error  reduce 72
	ID  reduce 72
	CTE  reduce 72
	IF  reduce 72
	PRINT  reduce 72
	RETURN  reduce 72
	FUNCTION  reduce 72
	BEGIN  reduce 72
	END  reduce 72
	LOOP  reduce 72
	UNTIL  reduce 72


state 101
	sentencia_if_error : IF error $$15 bloque_IF .  (60)

	.  reduce 60


state 102
	sentencia_if_error : IF THEN $$10 bloque_IF .  (50)

	.  reduce 50


state 103
	sentencia_if : IF '(' cond ')' . $$9 THEN bloque_IF  (47)
	sentencia_if_error : IF '(' cond ')' . $$14 bloque_IF  (58)
	$$9 : .  (46)
	$$14 : .  (57)

	error  reduce 57
	ID  reduce 57
	IF  reduce 57
	THEN  reduce 46
	PRINT  reduce 57
	RETURN  reduce 57
	BEGIN  reduce 57
	LOOP  reduce 57

	$$9  goto 129
	$$14  goto 130


state 104
	sentencia_if_error : IF '(' cond $$12 . THEN bloque_IF  (54)

	THEN  shift 131
	.  error


state 105
	expresion : expresion '+' termino .  (88)
	termino : termino . '*' factor  (91)
	termino : termino . '/' factor  (92)

	'*'  shift 75
	'/'  shift 76
	error  reduce 88
	ID  reduce 88
	CTE  reduce 88
	IF  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	PRINT  reduce 88
	RETURN  reduce 88
	FUNCTION  reduce 88
	BEGIN  reduce 88
	END  reduce 88
	LOOP  reduce 88
	UNTIL  reduce 88
	MAY_IG  reduce 88
	MEN_IG  reduce 88
	DIST  reduce 88
	IGUAL  reduce 88
	')'  reduce 88
	';'  reduce 88
	','  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'+'  reduce 88
	'-'  reduce 88


state 106
	expresion : expresion '-' termino .  (89)
	termino : termino . '*' factor  (91)
	termino : termino . '/' factor  (92)

	'*'  shift 75
	'/'  shift 76
	error  reduce 89
	ID  reduce 89
	CTE  reduce 89
	IF  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	PRINT  reduce 89
	RETURN  reduce 89
	FUNCTION  reduce 89
	BEGIN  reduce 89
	END  reduce 89
	LOOP  reduce 89
	UNTIL  reduce 89
	MAY_IG  reduce 89
	MEN_IG  reduce 89
	DIST  reduce 89
	IGUAL  reduce 89
	')'  reduce 89
	';'  reduce 89
	','  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	'+'  reduce 89
	'-'  reduce 89


state 107
	cond : expresion comparador expresion .  (75)
	expresion : expresion . '+' termino  (88)
	expresion : expresion . '-' termino  (89)

	'+'  shift 70
	'-'  shift 71
	error  reduce 75
	ID  reduce 75
	CTE  reduce 75
	IF  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	PRINT  reduce 75
	RETURN  reduce 75
	FUNCTION  reduce 75
	BEGIN  reduce 75
	END  reduce 75
	LOOP  reduce 75
	UNTIL  reduce 75
	')'  reduce 75


state 108
	sentencia_if_error : IF cond ')' $$11 . THEN bloque_IF  (52)

	THEN  shift 132
	.  error


state 109
	sentencia_if_error : IF cond $$13 THEN . bloque_IF  (56)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 133
	sentencia_if_error  goto 25


state 110
	termino : termino '*' factor .  (91)

	.  reduce 91


state 111
	termino : termino '/' factor .  (92)

	.  reduce 92


state 112
	sent_abierta : PRINT $$7 '(' cadena . ')'  (37)

	')'  shift 134
	.  error


state 113
	sentencia_declar_funcion : FUNCTION ID '(' ')' . bloque_funcion  (7)

	BEGIN  shift 9
	.  error

	bloque_funcion  goto 135


state 114
	sentencia_declar_funcion : FUNCTION ID '(' parametros . ')' bloque_funcion  (6)

	')'  shift 136
	.  error


state 115
	parametros : tipo . ID  (82)
	parametros : tipo . ID ',' parametros  (83)

	ID  shift 137
	.  error


state 116
	bloque_funcion : BEGIN lista_sentencias $$1 bloque_funcion .  (14)

	.  reduce 14


state 117
	bloque_funcion : BEGIN lista_sentencias $$2 sentencia_declar_funcion .  (16)

	.  reduce 16


state 118
	sentencia_declarativa_tipo : tipo error ';' .  (22)

	.  reduce 22


state 119
	lista_var : ID ',' . lista_var  (70)

	ID  shift 89
	.  error

	lista_var  goto 138


state 120
	sentencia_declarativa_tipo : tipo lista_var ';' .  (21)

	.  reduce 21


state 121
	sentencia_declarativa_tipo : tipo lista_var $$3 . sent_correcta  (24)

	error  shift 3
	ID  shift 4
	PRINT  shift 6
	RETURN  shift 7
	.  error

	sent_correcta  goto 139
	sent_abierta  goto 95
	llamada_funcion  goto 21
	asignacion  goto 22


state 122
	sentencia_declarativa_tipo : tipo lista_var $$4 . sentencia_declarativa_tipo  (26)

	uint  shift 43
	.  error

	sentencia_declarativa_tipo  goto 140
	tipo  goto 49


state 123
	loop_error : bloque_sent error .  (67)

	.  reduce 67


state 124
	bloque_loop : bloque_sent UNTIL . cond  (63)
	loop_error : bloque_sent UNTIL . error  (66)

	error  shift 141
	ID  shift 30
	CTE  shift 31
	.  error

	llamada_funcion  goto 34
	expresion  goto 35
	cond  goto 142
	termino  goto 37
	factor  goto 38


state 125
	loop_error : bloque_sent cond .  (65)

	.  reduce 65


state 126
	lista_parametros : parametro ',' lista_parametros .  (84)

	.  reduce 84


state 127
	bloque_IF : ID bloque_IF .  (74)

	.  reduce 74


state 128
	bloque_IF : bloque_sent ELSE . bloque_sent  (73)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 143
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	sentencia_if_error  goto 25


state 129
	sentencia_if : IF '(' cond ')' $$9 . THEN bloque_IF  (47)

	THEN  shift 144
	.  error


state 130
	sentencia_if_error : IF '(' cond ')' $$14 . bloque_IF  (58)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 145
	sentencia_if_error  goto 25


state 131
	sentencia_if_error : IF '(' cond $$12 THEN . bloque_IF  (54)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 146
	sentencia_if_error  goto 25


state 132
	sentencia_if_error : IF cond ')' $$11 THEN . bloque_IF  (52)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 147
	sentencia_if_error  goto 25


state 133
	sentencia_if_error : IF cond $$13 THEN bloque_IF .  (56)

	.  reduce 56


state 134
	sent_abierta : PRINT $$7 '(' cadena ')' .  (37)

	.  reduce 37


state 135
	sentencia_declar_funcion : FUNCTION ID '(' ')' bloque_funcion .  (7)

	.  reduce 7


state 136
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' . bloque_funcion  (6)

	BEGIN  shift 9
	.  error

	bloque_funcion  goto 148


state 137
	parametros : tipo ID .  (82)
	parametros : tipo ID . ',' parametros  (83)

	','  shift 149
	')'  reduce 82


state 138
	lista_var : ID ',' lista_var .  (70)

	.  reduce 70


state 139
	sentencia_declarativa_tipo : tipo lista_var $$3 sent_correcta .  (24)

	.  reduce 24


state 140
	sentencia_declarativa_tipo : tipo lista_var $$4 sentencia_declarativa_tipo .  (26)

	.  reduce 26


state 141
	loop_error : bloque_sent UNTIL error .  (66)

	.  reduce 66


state 142
	bloque_loop : bloque_sent UNTIL cond .  (63)

	.  reduce 63


state 143
	bloque_IF : bloque_sent ELSE bloque_sent .  (73)

	.  reduce 73


state 144
	sentencia_if : IF '(' cond ')' $$9 THEN . bloque_IF  (47)

	error  shift 3
	ID  shift 99
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	.  error

	bloque_sent  goto 100
	bloque_funcion  goto 15
	sentencia_ejec  goto 16
	sent_correcta  goto 17
	sentencia_simple  goto 18
	sentencia_comp  goto 19
	sent_abierta  goto 20
	llamada_funcion  goto 21
	asignacion  goto 22
	sentencia_if  goto 23
	sentencia_loop  goto 24
	bloque_IF  goto 150
	sentencia_if_error  goto 25


state 145
	sentencia_if_error : IF '(' cond ')' $$14 bloque_IF .  (58)

	.  reduce 58


state 146
	sentencia_if_error : IF '(' cond $$12 THEN bloque_IF .  (54)

	.  reduce 54


state 147
	sentencia_if_error : IF cond ')' $$11 THEN bloque_IF .  (52)

	.  reduce 52


state 148
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion .  (6)

	.  reduce 6


state 149
	parametros : tipo ID ',' . parametros  (83)

	uint  shift 43
	.  error

	parametros  goto 151
	tipo  goto 115


state 150
	sentencia_if : IF '(' cond ')' $$9 THEN bloque_IF .  (47)

	.  reduce 47


state 151
	parametros : tipo ID ',' parametros .  (83)

	.  reduce 83


31 terminals, 50 nonterminals
98 grammar rules, 152 states
