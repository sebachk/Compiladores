   0  $accept : programa $end

   1  programa : BEGIN lista_declaraciones END

   2  lista_declaraciones : declaracion
   3                      | declaracion lista_declaraciones

   4  declaracion : sentencia_declar_funcion
   5              | bloque_sent

   6  bloque_sent : sentencia_ejec
   7              | bloque_funcion

   8  lista_sent : sentencia_ejec lista_sent
   9             | sentencia_ejec

  10  sentencia_ejec : asignacion ';'

  11  $$1 :

  12  sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF

  13  $$2 :

  14  sentencia_ejec : PRINT $$2 '(' cadena ')' ';'
  15                 | llamada_funcion ';'

  16  $$3 :

  17  sentencia_ejec : RETURN $$3 expresion ';'

  18  $$4 :

  19  sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond
  20                 | ';'

  21  llamada_funcion : ID '(' lista_parametros ')'
  22                  | ID '(' ')'

  23  sentencia_declarativa_tipo : tipo lista_var ';'

  24  lista_var : ID ',' lista_var
  25            | ID

  26  bloque_IF : bloque_sent
  27            | bloque_sent ELSE bloque_sent

  28  cond : expresion comparador expresion

  29  comparador : '<'
  30             | '>'
  31             | MEN_IG
  32             | MAY_IG
  33             | IGUAL
  34             | DIST

  35  sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion
  36                           | FUNCTION ID '(' ')' bloque_funcion

  37  parametros : tipo parametro
  38             | tipo parametro ',' parametros

  39  lista_parametros : parametro ',' lista_parametros
  40                   | parametro

  41  parametro : expresion

  42  bloque_funcion : BEGIN lista_sent END
  43                 | BEGIN lista_sent_declar lista_sent END

  44  lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar
  45                    | sentencia_declarativa_tipo

  46  asignacion : ID '=' expresion

  47  expresion : expresion '+' termino
  48            | expresion '-' termino
  49            | termino

  50  termino : termino '*' factor
  51          | termino '/' factor
  52          | factor

  53  factor : ID
  54         | CTE
  55         | llamada_funcion

  56  tipo : uint

state 0
	$accept : . programa $end  (0)

	BEGIN  shift 1
	.  error

	programa  goto 2


state 1
	programa : BEGIN . lista_declaraciones END  (1)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	FUNCTION  shift 7
	BEGIN  shift 8
	LOOP  shift 9
	';'  shift 10
	.  error

	lista_declaraciones  goto 11
	declaracion  goto 12
	sentencia_declar_funcion  goto 13
	bloque_sent  goto 14
	sentencia_ejec  goto 15
	bloque_funcion  goto 16
	asignacion  goto 17
	llamada_funcion  goto 18


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	llamada_funcion : ID . '(' lista_parametros ')'  (21)
	llamada_funcion : ID . '(' ')'  (22)
	asignacion : ID . '=' expresion  (46)

	'('  shift 19
	'='  shift 20
	.  error


state 4
	sentencia_ejec : IF . $$1 '(' cond ')' THEN bloque_IF  (12)
	$$1 : .  (11)

	.  reduce 11

	$$1  goto 21


state 5
	sentencia_ejec : PRINT . $$2 '(' cadena ')' ';'  (14)
	$$2 : .  (13)

	.  reduce 13

	$$2  goto 22


state 6
	sentencia_ejec : RETURN . $$3 expresion ';'  (17)
	$$3 : .  (16)

	.  reduce 16

	$$3  goto 23


state 7
	sentencia_declar_funcion : FUNCTION . ID '(' parametros ')' bloque_funcion  (35)
	sentencia_declar_funcion : FUNCTION . ID '(' ')' bloque_funcion  (36)

	ID  shift 24
	.  error


state 8
	bloque_funcion : BEGIN . lista_sent END  (42)
	bloque_funcion : BEGIN . lista_sent_declar lista_sent END  (43)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	LOOP  shift 9
	uint  shift 25
	';'  shift 10
	.  error

	sentencia_ejec  goto 26
	lista_sent  goto 27
	asignacion  goto 17
	llamada_funcion  goto 18
	sentencia_declarativa_tipo  goto 28
	tipo  goto 29
	lista_sent_declar  goto 30


state 9
	sentencia_ejec : LOOP . $$4 bloque_sent UNTIL cond  (19)
	$$4 : .  (18)

	.  reduce 18

	$$4  goto 31


state 10
	sentencia_ejec : ';' .  (20)

	.  reduce 20


state 11
	programa : BEGIN lista_declaraciones . END  (1)

	END  shift 32
	.  error


state 12
	lista_declaraciones : declaracion .  (2)
	lista_declaraciones : declaracion . lista_declaraciones  (3)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	FUNCTION  shift 7
	BEGIN  shift 8
	LOOP  shift 9
	';'  shift 10
	END  reduce 2

	lista_declaraciones  goto 33
	declaracion  goto 12
	sentencia_declar_funcion  goto 13
	bloque_sent  goto 14
	sentencia_ejec  goto 15
	bloque_funcion  goto 16
	asignacion  goto 17
	llamada_funcion  goto 18


state 13
	declaracion : sentencia_declar_funcion .  (4)

	.  reduce 4


state 14
	declaracion : bloque_sent .  (5)

	.  reduce 5


state 15
	bloque_sent : sentencia_ejec .  (6)

	.  reduce 6


state 16
	bloque_sent : bloque_funcion .  (7)

	.  reduce 7


state 17
	sentencia_ejec : asignacion . ';'  (10)

	';'  shift 34
	.  error


state 18
	sentencia_ejec : llamada_funcion . ';'  (15)

	';'  shift 35
	.  error


state 19
	llamada_funcion : ID '(' . lista_parametros ')'  (21)
	llamada_funcion : ID '(' . ')'  (22)

	ID  shift 36
	CTE  shift 37
	')'  shift 38
	.  error

	llamada_funcion  goto 39
	expresion  goto 40
	lista_parametros  goto 41
	parametro  goto 42
	termino  goto 43
	factor  goto 44


state 20
	asignacion : ID '=' . expresion  (46)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	expresion  goto 45
	termino  goto 43
	factor  goto 44


state 21
	sentencia_ejec : IF $$1 . '(' cond ')' THEN bloque_IF  (12)

	'('  shift 46
	.  error


state 22
	sentencia_ejec : PRINT $$2 . '(' cadena ')' ';'  (14)

	'('  shift 47
	.  error


state 23
	sentencia_ejec : RETURN $$3 . expresion ';'  (17)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	expresion  goto 48
	termino  goto 43
	factor  goto 44


state 24
	sentencia_declar_funcion : FUNCTION ID . '(' parametros ')' bloque_funcion  (35)
	sentencia_declar_funcion : FUNCTION ID . '(' ')' bloque_funcion  (36)

	'('  shift 49
	.  error


state 25
	tipo : uint .  (56)

	.  reduce 56


state 26
	lista_sent : sentencia_ejec . lista_sent  (8)
	lista_sent : sentencia_ejec .  (9)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	LOOP  shift 9
	';'  shift 10
	END  reduce 9

	sentencia_ejec  goto 26
	lista_sent  goto 50
	asignacion  goto 17
	llamada_funcion  goto 18


state 27
	bloque_funcion : BEGIN lista_sent . END  (42)

	END  shift 51
	.  error


state 28
	lista_sent_declar : sentencia_declarativa_tipo . lista_sent_declar  (44)
	lista_sent_declar : sentencia_declarativa_tipo .  (45)

	uint  shift 25
	ID  reduce 45
	IF  reduce 45
	PRINT  reduce 45
	RETURN  reduce 45
	LOOP  reduce 45
	';'  reduce 45

	sentencia_declarativa_tipo  goto 28
	tipo  goto 29
	lista_sent_declar  goto 52


state 29
	sentencia_declarativa_tipo : tipo . lista_var ';'  (23)

	ID  shift 53
	.  error

	lista_var  goto 54


state 30
	bloque_funcion : BEGIN lista_sent_declar . lista_sent END  (43)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	LOOP  shift 9
	';'  shift 10
	.  error

	sentencia_ejec  goto 26
	lista_sent  goto 55
	asignacion  goto 17
	llamada_funcion  goto 18


state 31
	sentencia_ejec : LOOP $$4 . bloque_sent UNTIL cond  (19)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	BEGIN  shift 8
	LOOP  shift 9
	';'  shift 10
	.  error

	bloque_sent  goto 56
	sentencia_ejec  goto 15
	bloque_funcion  goto 16
	asignacion  goto 17
	llamada_funcion  goto 18


state 32
	programa : BEGIN lista_declaraciones END .  (1)

	.  reduce 1


state 33
	lista_declaraciones : declaracion lista_declaraciones .  (3)

	.  reduce 3


state 34
	sentencia_ejec : asignacion ';' .  (10)

	.  reduce 10


state 35
	sentencia_ejec : llamada_funcion ';' .  (15)

	.  reduce 15


state 36
	llamada_funcion : ID . '(' lista_parametros ')'  (21)
	llamada_funcion : ID . '(' ')'  (22)
	factor : ID .  (53)

	'('  shift 19
	ID  reduce 53
	IF  reduce 53
	ELSE  reduce 53
	PRINT  reduce 53
	RETURN  reduce 53
	FUNCTION  reduce 53
	BEGIN  reduce 53
	END  reduce 53
	LOOP  reduce 53
	UNTIL  reduce 53
	MAY_IG  reduce 53
	MEN_IG  reduce 53
	DIST  reduce 53
	IGUAL  reduce 53
	';'  reduce 53
	')'  reduce 53
	','  reduce 53
	'<'  reduce 53
	'>'  reduce 53
	'+'  reduce 53
	'-'  reduce 53
	'*'  reduce 53
	'/'  reduce 53


state 37
	factor : CTE .  (54)

	.  reduce 54


state 38
	llamada_funcion : ID '(' ')' .  (22)

	.  reduce 22


state 39
	factor : llamada_funcion .  (55)

	.  reduce 55


state 40
	parametro : expresion .  (41)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 57
	'-'  shift 58
	')'  reduce 41
	','  reduce 41


state 41
	llamada_funcion : ID '(' lista_parametros . ')'  (21)

	')'  shift 59
	.  error


state 42
	lista_parametros : parametro . ',' lista_parametros  (39)
	lista_parametros : parametro .  (40)

	','  shift 60
	')'  reduce 40


state 43
	expresion : termino .  (49)
	termino : termino . '*' factor  (50)
	termino : termino . '/' factor  (51)

	'*'  shift 61
	'/'  shift 62
	ID  reduce 49
	IF  reduce 49
	ELSE  reduce 49
	PRINT  reduce 49
	RETURN  reduce 49
	FUNCTION  reduce 49
	BEGIN  reduce 49
	END  reduce 49
	LOOP  reduce 49
	UNTIL  reduce 49
	MAY_IG  reduce 49
	MEN_IG  reduce 49
	DIST  reduce 49
	IGUAL  reduce 49
	';'  reduce 49
	')'  reduce 49
	','  reduce 49
	'<'  reduce 49
	'>'  reduce 49
	'+'  reduce 49
	'-'  reduce 49


state 44
	termino : factor .  (52)

	.  reduce 52


state 45
	asignacion : ID '=' expresion .  (46)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 57
	'-'  shift 58
	';'  reduce 46


state 46
	sentencia_ejec : IF $$1 '(' . cond ')' THEN bloque_IF  (12)

	ID  shift 36
	CTE  shift 37
	.  error

	cond  goto 63
	llamada_funcion  goto 39
	expresion  goto 64
	termino  goto 43
	factor  goto 44


state 47
	sentencia_ejec : PRINT $$2 '(' . cadena ')' ';'  (14)

	cadena  shift 65
	.  error


state 48
	sentencia_ejec : RETURN $$3 expresion . ';'  (17)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	';'  shift 66
	'+'  shift 57
	'-'  shift 58
	.  error


state 49
	sentencia_declar_funcion : FUNCTION ID '(' . parametros ')' bloque_funcion  (35)
	sentencia_declar_funcion : FUNCTION ID '(' . ')' bloque_funcion  (36)

	uint  shift 25
	')'  shift 67
	.  error

	tipo  goto 68
	parametros  goto 69


state 50
	lista_sent : sentencia_ejec lista_sent .  (8)

	.  reduce 8


state 51
	bloque_funcion : BEGIN lista_sent END .  (42)

	.  reduce 42


state 52
	lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar .  (44)

	.  reduce 44


state 53
	lista_var : ID . ',' lista_var  (24)
	lista_var : ID .  (25)

	','  shift 70
	';'  reduce 25


state 54
	sentencia_declarativa_tipo : tipo lista_var . ';'  (23)

	';'  shift 71
	.  error


state 55
	bloque_funcion : BEGIN lista_sent_declar lista_sent . END  (43)

	END  shift 72
	.  error


state 56
	sentencia_ejec : LOOP $$4 bloque_sent . UNTIL cond  (19)

	UNTIL  shift 73
	.  error


state 57
	expresion : expresion '+' . termino  (47)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	termino  goto 74
	factor  goto 44


state 58
	expresion : expresion '-' . termino  (48)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	termino  goto 75
	factor  goto 44


state 59
	llamada_funcion : ID '(' lista_parametros ')' .  (21)

	.  reduce 21


state 60
	lista_parametros : parametro ',' . lista_parametros  (39)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	expresion  goto 40
	lista_parametros  goto 76
	parametro  goto 42
	termino  goto 43
	factor  goto 44


state 61
	termino : termino '*' . factor  (50)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	factor  goto 77


state 62
	termino : termino '/' . factor  (51)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	factor  goto 78


state 63
	sentencia_ejec : IF $$1 '(' cond . ')' THEN bloque_IF  (12)

	')'  shift 79
	.  error


state 64
	cond : expresion . comparador expresion  (28)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	MAY_IG  shift 80
	MEN_IG  shift 81
	DIST  shift 82
	IGUAL  shift 83
	'<'  shift 84
	'>'  shift 85
	'+'  shift 57
	'-'  shift 58
	.  error

	comparador  goto 86


state 65
	sentencia_ejec : PRINT $$2 '(' cadena . ')' ';'  (14)

	')'  shift 87
	.  error


state 66
	sentencia_ejec : RETURN $$3 expresion ';' .  (17)

	.  reduce 17


state 67
	sentencia_declar_funcion : FUNCTION ID '(' ')' . bloque_funcion  (36)

	BEGIN  shift 8
	.  error

	bloque_funcion  goto 88


state 68
	parametros : tipo . parametro  (37)
	parametros : tipo . parametro ',' parametros  (38)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	expresion  goto 40
	parametro  goto 89
	termino  goto 43
	factor  goto 44


state 69
	sentencia_declar_funcion : FUNCTION ID '(' parametros . ')' bloque_funcion  (35)

	')'  shift 90
	.  error


state 70
	lista_var : ID ',' . lista_var  (24)

	ID  shift 53
	.  error

	lista_var  goto 91


state 71
	sentencia_declarativa_tipo : tipo lista_var ';' .  (23)

	.  reduce 23


state 72
	bloque_funcion : BEGIN lista_sent_declar lista_sent END .  (43)

	.  reduce 43


state 73
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL . cond  (19)

	ID  shift 36
	CTE  shift 37
	.  error

	cond  goto 92
	llamada_funcion  goto 39
	expresion  goto 64
	termino  goto 43
	factor  goto 44


state 74
	expresion : expresion '+' termino .  (47)
	termino : termino . '*' factor  (50)
	termino : termino . '/' factor  (51)

	'*'  shift 61
	'/'  shift 62
	ID  reduce 47
	IF  reduce 47
	ELSE  reduce 47
	PRINT  reduce 47
	RETURN  reduce 47
	FUNCTION  reduce 47
	BEGIN  reduce 47
	END  reduce 47
	LOOP  reduce 47
	UNTIL  reduce 47
	MAY_IG  reduce 47
	MEN_IG  reduce 47
	DIST  reduce 47
	IGUAL  reduce 47
	';'  reduce 47
	')'  reduce 47
	','  reduce 47
	'<'  reduce 47
	'>'  reduce 47
	'+'  reduce 47
	'-'  reduce 47


state 75
	expresion : expresion '-' termino .  (48)
	termino : termino . '*' factor  (50)
	termino : termino . '/' factor  (51)

	'*'  shift 61
	'/'  shift 62
	ID  reduce 48
	IF  reduce 48
	ELSE  reduce 48
	PRINT  reduce 48
	RETURN  reduce 48
	FUNCTION  reduce 48
	BEGIN  reduce 48
	END  reduce 48
	LOOP  reduce 48
	UNTIL  reduce 48
	MAY_IG  reduce 48
	MEN_IG  reduce 48
	DIST  reduce 48
	IGUAL  reduce 48
	';'  reduce 48
	')'  reduce 48
	','  reduce 48
	'<'  reduce 48
	'>'  reduce 48
	'+'  reduce 48
	'-'  reduce 48


state 76
	lista_parametros : parametro ',' lista_parametros .  (39)

	.  reduce 39


state 77
	termino : termino '*' factor .  (50)

	.  reduce 50


state 78
	termino : termino '/' factor .  (51)

	.  reduce 51


state 79
	sentencia_ejec : IF $$1 '(' cond ')' . THEN bloque_IF  (12)

	THEN  shift 93
	.  error


state 80
	comparador : MAY_IG .  (32)

	.  reduce 32


state 81
	comparador : MEN_IG .  (31)

	.  reduce 31


state 82
	comparador : DIST .  (34)

	.  reduce 34


state 83
	comparador : IGUAL .  (33)

	.  reduce 33


state 84
	comparador : '<' .  (29)

	.  reduce 29


state 85
	comparador : '>' .  (30)

	.  reduce 30


state 86
	cond : expresion comparador . expresion  (28)

	ID  shift 36
	CTE  shift 37
	.  error

	llamada_funcion  goto 39
	expresion  goto 94
	termino  goto 43
	factor  goto 44


state 87
	sentencia_ejec : PRINT $$2 '(' cadena ')' . ';'  (14)

	';'  shift 95
	.  error


state 88
	sentencia_declar_funcion : FUNCTION ID '(' ')' bloque_funcion .  (36)

	.  reduce 36


state 89
	parametros : tipo parametro .  (37)
	parametros : tipo parametro . ',' parametros  (38)

	','  shift 96
	')'  reduce 37


state 90
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' . bloque_funcion  (35)

	BEGIN  shift 8
	.  error

	bloque_funcion  goto 97


state 91
	lista_var : ID ',' lista_var .  (24)

	.  reduce 24


state 92
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond .  (19)

	.  reduce 19


state 93
	sentencia_ejec : IF $$1 '(' cond ')' THEN . bloque_IF  (12)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	BEGIN  shift 8
	LOOP  shift 9
	';'  shift 10
	.  error

	bloque_sent  goto 98
	sentencia_ejec  goto 15
	bloque_funcion  goto 16
	asignacion  goto 17
	bloque_IF  goto 99
	llamada_funcion  goto 18


state 94
	cond : expresion comparador expresion .  (28)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 57
	'-'  shift 58
	ID  reduce 28
	IF  reduce 28
	ELSE  reduce 28
	PRINT  reduce 28
	RETURN  reduce 28
	FUNCTION  reduce 28
	BEGIN  reduce 28
	END  reduce 28
	LOOP  reduce 28
	UNTIL  reduce 28
	';'  reduce 28
	')'  reduce 28


state 95
	sentencia_ejec : PRINT $$2 '(' cadena ')' ';' .  (14)

	.  reduce 14


state 96
	parametros : tipo parametro ',' . parametros  (38)

	uint  shift 25
	.  error

	tipo  goto 68
	parametros  goto 100


state 97
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion .  (35)

	.  reduce 35


state 98
	bloque_IF : bloque_sent .  (26)
	bloque_IF : bloque_sent . ELSE bloque_sent  (27)

	ELSE  shift 101
	ID  reduce 26
	IF  reduce 26
	PRINT  reduce 26
	RETURN  reduce 26
	FUNCTION  reduce 26
	BEGIN  reduce 26
	END  reduce 26
	LOOP  reduce 26
	UNTIL  reduce 26
	';'  reduce 26


state 99
	sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF .  (12)

	.  reduce 12


state 100
	parametros : tipo parametro ',' parametros .  (38)

	.  reduce 38


state 101
	bloque_IF : bloque_sent ELSE . bloque_sent  (27)

	ID  shift 3
	IF  shift 4
	PRINT  shift 5
	RETURN  shift 6
	BEGIN  shift 8
	LOOP  shift 9
	';'  shift 10
	.  error

	bloque_sent  goto 102
	sentencia_ejec  goto 15
	bloque_funcion  goto 16
	asignacion  goto 17
	llamada_funcion  goto 18


state 102
	bloque_IF : bloque_sent ELSE bloque_sent .  (27)

	.  reduce 27


31 terminals, 28 nonterminals
57 grammar rules, 103 states
