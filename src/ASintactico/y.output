   0  $accept : programa $end

   1  programa : BEGIN lista_declaraciones END

   2  lista_declaraciones : declaracion
   3                      | declaracion lista_declaraciones

   4  declaracion : sentencia_declar_funcion
   5              | bloque_sent

   6  sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion
   7                           | FUNCTION ID '(' ')' bloque_funcion
   8                           | FUNCTION error ')'

   9  bloque_sent : sentencia_ejec
  10              | bloque_funcion

  11  bloque_funcion : BEGIN lista_sent END
  12                 | BEGIN lista_sent_declar lista_sent END
  13                 | error END

  14  lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar
  15                    | sentencia_declarativa_tipo

  16  lista_sent : sentencia_ejec lista_sent
  17             | sentencia_ejec

  18  sentencia_ejec : asignacion ';'

  19  $$1 :

  20  sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF

  21  $$2 :

  22  sentencia_ejec : PRINT $$2 '(' cadena ')' ';'
  23                 | llamada_funcion ';'

  24  $$3 :

  25  sentencia_ejec : RETURN $$3 expresion ';'

  26  $$4 :

  27  sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond
  28                 | ';'
  29                 | error ';'

  30  llamada_funcion : ID '(' lista_parametros ')'
  31                  | ID '(' ')'

  32  sentencia_declarativa_tipo : tipo lista_var ';'
  33                             | tipo error ';'

  34  lista_var : ID ',' lista_var
  35            | ID

  36  bloque_IF : bloque_sent
  37            | bloque_sent ELSE bloque_sent

  38  cond : expresion comparador expresion

  39  comparador : '<'
  40             | '>'
  41             | MEN_IG
  42             | MAY_IG
  43             | IGUAL
  44             | DIST

  45  parametros : tipo ID
  46             | tipo ID ',' parametros

  47  lista_parametros : parametro ',' lista_parametros
  48                   | parametro

  49  parametro : expresion

  50  asignacion : ID '=' expresion

  51  expresion : expresion '+' termino
  52            | expresion '-' termino
  53            | termino

  54  termino : termino '*' factor
  55          | termino '/' factor
  56          | factor

  57  factor : ID
  58         | CTE
  59         | llamada_funcion

  60  tipo : uint

state 0
	$accept : . programa $end  (0)

	BEGIN  shift 1
	.  error

	programa  goto 2


state 1
	programa : BEGIN . lista_declaraciones END  (1)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FUNCTION  shift 8
	BEGIN  shift 9
	LOOP  shift 10
	';'  shift 11
	.  error

	lista_declaraciones  goto 12
	declaracion  goto 13
	sentencia_declar_funcion  goto 14
	bloque_sent  goto 15
	bloque_funcion  goto 16
	sentencia_ejec  goto 17
	asignacion  goto 18
	llamada_funcion  goto 19


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	bloque_funcion : error . END  (13)
	sentencia_ejec : error . ';'  (29)

	END  shift 20
	';'  shift 21
	.  error


state 4
	llamada_funcion : ID . '(' lista_parametros ')'  (30)
	llamada_funcion : ID . '(' ')'  (31)
	asignacion : ID . '=' expresion  (50)

	'('  shift 22
	'='  shift 23
	.  error


state 5
	sentencia_ejec : IF . $$1 '(' cond ')' THEN bloque_IF  (20)
	$$1 : .  (19)

	.  reduce 19

	$$1  goto 24


state 6
	sentencia_ejec : PRINT . $$2 '(' cadena ')' ';'  (22)
	$$2 : .  (21)

	.  reduce 21

	$$2  goto 25


state 7
	sentencia_ejec : RETURN . $$3 expresion ';'  (25)
	$$3 : .  (24)

	.  reduce 24

	$$3  goto 26


state 8
	sentencia_declar_funcion : FUNCTION . ID '(' parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION . ID '(' ')' bloque_funcion  (7)
	sentencia_declar_funcion : FUNCTION . error ')'  (8)

	error  shift 27
	ID  shift 28
	.  error


state 9
	bloque_funcion : BEGIN . lista_sent END  (11)
	bloque_funcion : BEGIN . lista_sent_declar lista_sent END  (12)

	error  shift 29
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	uint  shift 30
	';'  shift 11
	.  error

	sentencia_ejec  goto 31
	lista_sent  goto 32
	lista_sent_declar  goto 33
	sentencia_declarativa_tipo  goto 34
	asignacion  goto 18
	llamada_funcion  goto 19
	tipo  goto 35


state 10
	sentencia_ejec : LOOP . $$4 bloque_sent UNTIL cond  (27)
	$$4 : .  (26)

	.  reduce 26

	$$4  goto 36


state 11
	sentencia_ejec : ';' .  (28)

	.  reduce 28


state 12
	programa : BEGIN lista_declaraciones . END  (1)

	END  shift 37
	.  error


state 13
	lista_declaraciones : declaracion .  (2)
	lista_declaraciones : declaracion . lista_declaraciones  (3)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FUNCTION  shift 8
	BEGIN  shift 9
	LOOP  shift 10
	';'  shift 11
	END  reduce 2

	lista_declaraciones  goto 38
	declaracion  goto 13
	sentencia_declar_funcion  goto 14
	bloque_sent  goto 15
	bloque_funcion  goto 16
	sentencia_ejec  goto 17
	asignacion  goto 18
	llamada_funcion  goto 19


state 14
	declaracion : sentencia_declar_funcion .  (4)

	.  reduce 4


state 15
	declaracion : bloque_sent .  (5)

	.  reduce 5


state 16
	bloque_sent : bloque_funcion .  (10)

	.  reduce 10


state 17
	bloque_sent : sentencia_ejec .  (9)

	.  reduce 9


state 18
	sentencia_ejec : asignacion . ';'  (18)

	';'  shift 39
	.  error


state 19
	sentencia_ejec : llamada_funcion . ';'  (23)

	';'  shift 40
	.  error


state 20
	bloque_funcion : error END .  (13)

	.  reduce 13


state 21
	sentencia_ejec : error ';' .  (29)

	.  reduce 29


state 22
	llamada_funcion : ID '(' . lista_parametros ')'  (30)
	llamada_funcion : ID '(' . ')'  (31)

	ID  shift 41
	CTE  shift 42
	')'  shift 43
	.  error

	llamada_funcion  goto 44
	expresion  goto 45
	lista_parametros  goto 46
	parametro  goto 47
	termino  goto 48
	factor  goto 49


state 23
	asignacion : ID '=' . expresion  (50)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	expresion  goto 50
	termino  goto 48
	factor  goto 49


state 24
	sentencia_ejec : IF $$1 . '(' cond ')' THEN bloque_IF  (20)

	'('  shift 51
	.  error


state 25
	sentencia_ejec : PRINT $$2 . '(' cadena ')' ';'  (22)

	'('  shift 52
	.  error


state 26
	sentencia_ejec : RETURN $$3 . expresion ';'  (25)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	expresion  goto 53
	termino  goto 48
	factor  goto 49


state 27
	sentencia_declar_funcion : FUNCTION error . ')'  (8)

	')'  shift 54
	.  error


state 28
	sentencia_declar_funcion : FUNCTION ID . '(' parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION ID . '(' ')' bloque_funcion  (7)

	'('  shift 55
	.  error


state 29
	sentencia_ejec : error . ';'  (29)

	';'  shift 21
	.  error


state 30
	tipo : uint .  (60)

	.  reduce 60


state 31
	lista_sent : sentencia_ejec . lista_sent  (16)
	lista_sent : sentencia_ejec .  (17)

	error  shift 29
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	';'  shift 11
	END  reduce 17

	sentencia_ejec  goto 31
	lista_sent  goto 56
	asignacion  goto 18
	llamada_funcion  goto 19


state 32
	bloque_funcion : BEGIN lista_sent . END  (11)

	END  shift 57
	.  error


state 33
	bloque_funcion : BEGIN lista_sent_declar . lista_sent END  (12)

	error  shift 29
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	LOOP  shift 10
	';'  shift 11
	.  error

	sentencia_ejec  goto 31
	lista_sent  goto 58
	asignacion  goto 18
	llamada_funcion  goto 19


state 34
	lista_sent_declar : sentencia_declarativa_tipo . lista_sent_declar  (14)
	lista_sent_declar : sentencia_declarativa_tipo .  (15)

	uint  shift 30
	error  reduce 15
	ID  reduce 15
	IF  reduce 15
	PRINT  reduce 15
	RETURN  reduce 15
	LOOP  reduce 15
	';'  reduce 15

	lista_sent_declar  goto 59
	sentencia_declarativa_tipo  goto 34
	tipo  goto 35


state 35
	sentencia_declarativa_tipo : tipo . lista_var ';'  (32)
	sentencia_declarativa_tipo : tipo . error ';'  (33)

	error  shift 60
	ID  shift 61
	.  error

	lista_var  goto 62


state 36
	sentencia_ejec : LOOP $$4 . bloque_sent UNTIL cond  (27)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	';'  shift 11
	.  error

	bloque_sent  goto 63
	bloque_funcion  goto 16
	sentencia_ejec  goto 17
	asignacion  goto 18
	llamada_funcion  goto 19


state 37
	programa : BEGIN lista_declaraciones END .  (1)

	.  reduce 1


state 38
	lista_declaraciones : declaracion lista_declaraciones .  (3)

	.  reduce 3


state 39
	sentencia_ejec : asignacion ';' .  (18)

	.  reduce 18


state 40
	sentencia_ejec : llamada_funcion ';' .  (23)

	.  reduce 23


state 41
	llamada_funcion : ID . '(' lista_parametros ')'  (30)
	llamada_funcion : ID . '(' ')'  (31)
	factor : ID .  (57)

	'('  shift 22
	error  reduce 57
	ID  reduce 57
	IF  reduce 57
	ELSE  reduce 57
	PRINT  reduce 57
	RETURN  reduce 57
	FUNCTION  reduce 57
	BEGIN  reduce 57
	END  reduce 57
	LOOP  reduce 57
	UNTIL  reduce 57
	MAY_IG  reduce 57
	MEN_IG  reduce 57
	DIST  reduce 57
	IGUAL  reduce 57
	')'  reduce 57
	';'  reduce 57
	','  reduce 57
	'<'  reduce 57
	'>'  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'*'  reduce 57
	'/'  reduce 57


state 42
	factor : CTE .  (58)

	.  reduce 58


state 43
	llamada_funcion : ID '(' ')' .  (31)

	.  reduce 31


state 44
	factor : llamada_funcion .  (59)

	.  reduce 59


state 45
	parametro : expresion .  (49)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'+'  shift 64
	'-'  shift 65
	')'  reduce 49
	','  reduce 49


state 46
	llamada_funcion : ID '(' lista_parametros . ')'  (30)

	')'  shift 66
	.  error


state 47
	lista_parametros : parametro . ',' lista_parametros  (47)
	lista_parametros : parametro .  (48)

	','  shift 67
	')'  reduce 48


state 48
	expresion : termino .  (53)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 68
	'/'  shift 69
	error  reduce 53
	ID  reduce 53
	IF  reduce 53
	ELSE  reduce 53
	PRINT  reduce 53
	RETURN  reduce 53
	FUNCTION  reduce 53
	BEGIN  reduce 53
	END  reduce 53
	LOOP  reduce 53
	UNTIL  reduce 53
	MAY_IG  reduce 53
	MEN_IG  reduce 53
	DIST  reduce 53
	IGUAL  reduce 53
	')'  reduce 53
	';'  reduce 53
	','  reduce 53
	'<'  reduce 53
	'>'  reduce 53
	'+'  reduce 53
	'-'  reduce 53


state 49
	termino : factor .  (56)

	.  reduce 56


state 50
	asignacion : ID '=' expresion .  (50)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'+'  shift 64
	'-'  shift 65
	';'  reduce 50


state 51
	sentencia_ejec : IF $$1 '(' . cond ')' THEN bloque_IF  (20)

	ID  shift 41
	CTE  shift 42
	.  error

	cond  goto 70
	llamada_funcion  goto 44
	expresion  goto 71
	termino  goto 48
	factor  goto 49


state 52
	sentencia_ejec : PRINT $$2 '(' . cadena ')' ';'  (22)

	cadena  shift 72
	.  error


state 53
	sentencia_ejec : RETURN $$3 expresion . ';'  (25)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	';'  shift 73
	'+'  shift 64
	'-'  shift 65
	.  error


state 54
	sentencia_declar_funcion : FUNCTION error ')' .  (8)

	.  reduce 8


state 55
	sentencia_declar_funcion : FUNCTION ID '(' . parametros ')' bloque_funcion  (6)
	sentencia_declar_funcion : FUNCTION ID '(' . ')' bloque_funcion  (7)

	uint  shift 30
	')'  shift 74
	.  error

	parametros  goto 75
	tipo  goto 76


state 56
	lista_sent : sentencia_ejec lista_sent .  (16)

	.  reduce 16


state 57
	bloque_funcion : BEGIN lista_sent END .  (11)

	.  reduce 11


state 58
	bloque_funcion : BEGIN lista_sent_declar lista_sent . END  (12)

	END  shift 77
	.  error


state 59
	lista_sent_declar : sentencia_declarativa_tipo lista_sent_declar .  (14)

	.  reduce 14


state 60
	sentencia_declarativa_tipo : tipo error . ';'  (33)

	';'  shift 78
	.  error


state 61
	lista_var : ID . ',' lista_var  (34)
	lista_var : ID .  (35)

	','  shift 79
	';'  reduce 35


state 62
	sentencia_declarativa_tipo : tipo lista_var . ';'  (32)

	';'  shift 80
	.  error


state 63
	sentencia_ejec : LOOP $$4 bloque_sent . UNTIL cond  (27)

	UNTIL  shift 81
	.  error


state 64
	expresion : expresion '+' . termino  (51)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	termino  goto 82
	factor  goto 49


state 65
	expresion : expresion '-' . termino  (52)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	termino  goto 83
	factor  goto 49


state 66
	llamada_funcion : ID '(' lista_parametros ')' .  (30)

	.  reduce 30


state 67
	lista_parametros : parametro ',' . lista_parametros  (47)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	expresion  goto 45
	lista_parametros  goto 84
	parametro  goto 47
	termino  goto 48
	factor  goto 49


state 68
	termino : termino '*' . factor  (54)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	factor  goto 85


state 69
	termino : termino '/' . factor  (55)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	factor  goto 86


state 70
	sentencia_ejec : IF $$1 '(' cond . ')' THEN bloque_IF  (20)

	')'  shift 87
	.  error


state 71
	cond : expresion . comparador expresion  (38)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	MAY_IG  shift 88
	MEN_IG  shift 89
	DIST  shift 90
	IGUAL  shift 91
	'<'  shift 92
	'>'  shift 93
	'+'  shift 64
	'-'  shift 65
	.  error

	comparador  goto 94


state 72
	sentencia_ejec : PRINT $$2 '(' cadena . ')' ';'  (22)

	')'  shift 95
	.  error


state 73
	sentencia_ejec : RETURN $$3 expresion ';' .  (25)

	.  reduce 25


state 74
	sentencia_declar_funcion : FUNCTION ID '(' ')' . bloque_funcion  (7)

	error  shift 96
	BEGIN  shift 9
	.  error

	bloque_funcion  goto 97


state 75
	sentencia_declar_funcion : FUNCTION ID '(' parametros . ')' bloque_funcion  (6)

	')'  shift 98
	.  error


state 76
	parametros : tipo . ID  (45)
	parametros : tipo . ID ',' parametros  (46)

	ID  shift 99
	.  error


state 77
	bloque_funcion : BEGIN lista_sent_declar lista_sent END .  (12)

	.  reduce 12


state 78
	sentencia_declarativa_tipo : tipo error ';' .  (33)

	.  reduce 33


state 79
	lista_var : ID ',' . lista_var  (34)

	ID  shift 61
	.  error

	lista_var  goto 100


state 80
	sentencia_declarativa_tipo : tipo lista_var ';' .  (32)

	.  reduce 32


state 81
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL . cond  (27)

	ID  shift 41
	CTE  shift 42
	.  error

	cond  goto 101
	llamada_funcion  goto 44
	expresion  goto 71
	termino  goto 48
	factor  goto 49


state 82
	expresion : expresion '+' termino .  (51)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 68
	'/'  shift 69
	error  reduce 51
	ID  reduce 51
	IF  reduce 51
	ELSE  reduce 51
	PRINT  reduce 51
	RETURN  reduce 51
	FUNCTION  reduce 51
	BEGIN  reduce 51
	END  reduce 51
	LOOP  reduce 51
	UNTIL  reduce 51
	MAY_IG  reduce 51
	MEN_IG  reduce 51
	DIST  reduce 51
	IGUAL  reduce 51
	')'  reduce 51
	';'  reduce 51
	','  reduce 51
	'<'  reduce 51
	'>'  reduce 51
	'+'  reduce 51
	'-'  reduce 51


state 83
	expresion : expresion '-' termino .  (52)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 68
	'/'  shift 69
	error  reduce 52
	ID  reduce 52
	IF  reduce 52
	ELSE  reduce 52
	PRINT  reduce 52
	RETURN  reduce 52
	FUNCTION  reduce 52
	BEGIN  reduce 52
	END  reduce 52
	LOOP  reduce 52
	UNTIL  reduce 52
	MAY_IG  reduce 52
	MEN_IG  reduce 52
	DIST  reduce 52
	IGUAL  reduce 52
	')'  reduce 52
	';'  reduce 52
	','  reduce 52
	'<'  reduce 52
	'>'  reduce 52
	'+'  reduce 52
	'-'  reduce 52


state 84
	lista_parametros : parametro ',' lista_parametros .  (47)

	.  reduce 47


state 85
	termino : termino '*' factor .  (54)

	.  reduce 54


state 86
	termino : termino '/' factor .  (55)

	.  reduce 55


state 87
	sentencia_ejec : IF $$1 '(' cond ')' . THEN bloque_IF  (20)

	THEN  shift 102
	.  error


state 88
	comparador : MAY_IG .  (42)

	.  reduce 42


state 89
	comparador : MEN_IG .  (41)

	.  reduce 41


state 90
	comparador : DIST .  (44)

	.  reduce 44


state 91
	comparador : IGUAL .  (43)

	.  reduce 43


state 92
	comparador : '<' .  (39)

	.  reduce 39


state 93
	comparador : '>' .  (40)

	.  reduce 40


state 94
	cond : expresion comparador . expresion  (38)

	ID  shift 41
	CTE  shift 42
	.  error

	llamada_funcion  goto 44
	expresion  goto 103
	termino  goto 48
	factor  goto 49


state 95
	sentencia_ejec : PRINT $$2 '(' cadena ')' . ';'  (22)

	';'  shift 104
	.  error


state 96
	bloque_funcion : error . END  (13)

	END  shift 20
	.  error


state 97
	sentencia_declar_funcion : FUNCTION ID '(' ')' bloque_funcion .  (7)

	.  reduce 7


state 98
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' . bloque_funcion  (6)

	error  shift 96
	BEGIN  shift 9
	.  error

	bloque_funcion  goto 105


state 99
	parametros : tipo ID .  (45)
	parametros : tipo ID . ',' parametros  (46)

	','  shift 106
	')'  reduce 45


state 100
	lista_var : ID ',' lista_var .  (34)

	.  reduce 34


state 101
	sentencia_ejec : LOOP $$4 bloque_sent UNTIL cond .  (27)

	.  reduce 27


state 102
	sentencia_ejec : IF $$1 '(' cond ')' THEN . bloque_IF  (20)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	';'  shift 11
	.  error

	bloque_sent  goto 107
	bloque_funcion  goto 16
	sentencia_ejec  goto 17
	asignacion  goto 18
	bloque_IF  goto 108
	llamada_funcion  goto 19


state 103
	cond : expresion comparador expresion .  (38)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'+'  shift 64
	'-'  shift 65
	error  reduce 38
	ID  reduce 38
	IF  reduce 38
	ELSE  reduce 38
	PRINT  reduce 38
	RETURN  reduce 38
	FUNCTION  reduce 38
	BEGIN  reduce 38
	END  reduce 38
	LOOP  reduce 38
	UNTIL  reduce 38
	')'  reduce 38
	';'  reduce 38


state 104
	sentencia_ejec : PRINT $$2 '(' cadena ')' ';' .  (22)

	.  reduce 22


state 105
	sentencia_declar_funcion : FUNCTION ID '(' parametros ')' bloque_funcion .  (6)

	.  reduce 6


state 106
	parametros : tipo ID ',' . parametros  (46)

	uint  shift 30
	.  error

	parametros  goto 109
	tipo  goto 76


state 107
	bloque_IF : bloque_sent .  (36)
	bloque_IF : bloque_sent . ELSE bloque_sent  (37)

	ELSE  shift 110
	error  reduce 36
	ID  reduce 36
	IF  reduce 36
	PRINT  reduce 36
	RETURN  reduce 36
	FUNCTION  reduce 36
	BEGIN  reduce 36
	END  reduce 36
	LOOP  reduce 36
	UNTIL  reduce 36
	';'  reduce 36


state 108
	sentencia_ejec : IF $$1 '(' cond ')' THEN bloque_IF .  (20)

	.  reduce 20


state 109
	parametros : tipo ID ',' parametros .  (46)

	.  reduce 46


state 110
	bloque_IF : bloque_sent ELSE . bloque_sent  (37)

	error  shift 3
	ID  shift 4
	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	BEGIN  shift 9
	LOOP  shift 10
	';'  shift 11
	.  error

	bloque_sent  goto 111
	bloque_funcion  goto 16
	sentencia_ejec  goto 17
	asignacion  goto 18
	llamada_funcion  goto 19


state 111
	bloque_IF : bloque_sent ELSE bloque_sent .  (37)

	.  reduce 37


31 terminals, 28 nonterminals
61 grammar rules, 112 states
