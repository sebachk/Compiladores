   0  $accept : coso $end

   1  coso : sentencia_declar_funcion
   2       | bloque_sent

   3  bloque_sent : sentencia
   4              | bloque_funcion

   5  lista_sent : sentencia lista_sent
   6             | sentencia

   7  sentencia : sentencia_ejec
   8            | sentencia_declarativa_tipo

   9  sentencia_ejec : asignacion
  10                 | if '(' cond ')' then bloque_if
  11                 | print '(' cadena ')' ';'
  12                 | ID '(' lista_parametros ')' ';'
  13                 | return expresion ';'
  14                 | loop bloque_sent until cond

  15  sentencia_declarativa_tipo : tipo lista_var

  16  lista_var : ID lista_var
  17            | ID ';'

  18  bloque_if : bloque_sent
  19            | bloque_sent else bloque_sent

  20  cond : expresion comparador expresion

  21  comparador : '<'
  22             | '>'
  23             | '<' '='
  24             | '>' '='
  25             | '=' '='
  26             | '!' '='

  27  sentencia_declar_funcion : function ID '(' parametros ')' bloque_funcion

  28  parametros : tipo parametro
  29             | tipo parametro parametros

  30  lista_parametros : parametro lista_parametros
  31                   | parametro

  32  parametro : ID

  33  bloque_funcion : begin lista_sent end

  34  asignacion : ID '=' expresion ';'

  35  expresion : expresion '+' termino
  36            | expresion '-' termino
  37            | termino

  38  termino : termino '*' factor
  39          | termino '/' factor
  40          | factor

  41  factor : ID
  42         | CTE
  43         | '(' expresion ')'

  44  tipo : uint

state 0
	$accept : . coso $end  (0)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	function  shift 5
	begin  shift 6
	loop  shift 7
	uint  shift 8
	.  error

	coso  goto 9
	sentencia_declar_funcion  goto 10
	bloque_sent  goto 11
	sentencia  goto 12
	bloque_funcion  goto 13
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	tipo  goto 17


state 1
	sentencia_ejec : ID . '(' lista_parametros ')' ';'  (12)
	asignacion : ID . '=' expresion ';'  (34)

	'('  shift 18
	'='  shift 19
	.  error


state 2
	sentencia_ejec : if . '(' cond ')' then bloque_if  (10)

	'('  shift 20
	.  error


state 3
	sentencia_ejec : print . '(' cadena ')' ';'  (11)

	'('  shift 21
	.  error


state 4
	sentencia_ejec : return . expresion ';'  (13)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	expresion  goto 25
	termino  goto 26
	factor  goto 27


state 5
	sentencia_declar_funcion : function . ID '(' parametros ')' bloque_funcion  (27)

	ID  shift 28
	.  error


state 6
	bloque_funcion : begin . lista_sent end  (33)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	loop  shift 7
	uint  shift 8
	.  error

	sentencia  goto 29
	lista_sent  goto 30
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	tipo  goto 17


state 7
	sentencia_ejec : loop . bloque_sent until cond  (14)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	begin  shift 6
	loop  shift 7
	uint  shift 8
	.  error

	bloque_sent  goto 31
	sentencia  goto 12
	bloque_funcion  goto 13
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	tipo  goto 17


state 8
	tipo : uint .  (44)

	.  reduce 44


state 9
	$accept : coso . $end  (0)

	$end  accept


state 10
	coso : sentencia_declar_funcion .  (1)

	.  reduce 1


state 11
	coso : bloque_sent .  (2)

	.  reduce 2


state 12
	bloque_sent : sentencia .  (3)

	.  reduce 3


state 13
	bloque_sent : bloque_funcion .  (4)

	.  reduce 4


state 14
	sentencia : sentencia_ejec .  (7)

	.  reduce 7


state 15
	sentencia : sentencia_declarativa_tipo .  (8)

	.  reduce 8


state 16
	sentencia_ejec : asignacion .  (9)

	.  reduce 9


state 17
	sentencia_declarativa_tipo : tipo . lista_var  (15)

	ID  shift 32
	.  error

	lista_var  goto 33


state 18
	sentencia_ejec : ID '(' . lista_parametros ')' ';'  (12)

	ID  shift 34
	.  error

	lista_parametros  goto 35
	parametro  goto 36


state 19
	asignacion : ID '=' . expresion ';'  (34)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	expresion  goto 37
	termino  goto 26
	factor  goto 27


state 20
	sentencia_ejec : if '(' . cond ')' then bloque_if  (10)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	cond  goto 38
	expresion  goto 39
	termino  goto 26
	factor  goto 27


state 21
	sentencia_ejec : print '(' . cadena ')' ';'  (11)

	cadena  shift 40
	.  error


state 22
	factor : ID .  (41)

	.  reduce 41


state 23
	factor : CTE .  (42)

	.  reduce 42


state 24
	factor : '(' . expresion ')'  (43)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	expresion  goto 41
	termino  goto 26
	factor  goto 27


state 25
	sentencia_ejec : return expresion . ';'  (13)
	expresion : expresion . '+' termino  (35)
	expresion : expresion . '-' termino  (36)

	';'  shift 42
	'+'  shift 43
	'-'  shift 44
	.  error


state 26
	expresion : termino .  (37)
	termino : termino . '*' factor  (38)
	termino : termino . '/' factor  (39)

	'*'  shift 45
	'/'  shift 46
	$end  reduce 37
	ID  reduce 37
	if  reduce 37
	else  reduce 37
	print  reduce 37
	return  reduce 37
	end  reduce 37
	loop  reduce 37
	until  reduce 37
	uint  reduce 37
	')'  reduce 37
	';'  reduce 37
	'<'  reduce 37
	'>'  reduce 37
	'='  reduce 37
	'!'  reduce 37
	'+'  reduce 37
	'-'  reduce 37


state 27
	termino : factor .  (40)

	.  reduce 40


state 28
	sentencia_declar_funcion : function ID . '(' parametros ')' bloque_funcion  (27)

	'('  shift 47
	.  error


state 29
	lista_sent : sentencia . lista_sent  (5)
	lista_sent : sentencia .  (6)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	loop  shift 7
	uint  shift 8
	end  reduce 6

	sentencia  goto 29
	lista_sent  goto 48
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	tipo  goto 17


state 30
	bloque_funcion : begin lista_sent . end  (33)

	end  shift 49
	.  error


state 31
	sentencia_ejec : loop bloque_sent . until cond  (14)

	until  shift 50
	.  error


state 32
	lista_var : ID . lista_var  (16)
	lista_var : ID . ';'  (17)

	ID  shift 32
	';'  shift 51
	.  error

	lista_var  goto 52


state 33
	sentencia_declarativa_tipo : tipo lista_var .  (15)

	.  reduce 15


state 34
	parametro : ID .  (32)

	.  reduce 32


state 35
	sentencia_ejec : ID '(' lista_parametros . ')' ';'  (12)

	')'  shift 53
	.  error


state 36
	lista_parametros : parametro . lista_parametros  (30)
	lista_parametros : parametro .  (31)

	ID  shift 34
	')'  reduce 31

	lista_parametros  goto 54
	parametro  goto 36


state 37
	asignacion : ID '=' expresion . ';'  (34)
	expresion : expresion . '+' termino  (35)
	expresion : expresion . '-' termino  (36)

	';'  shift 55
	'+'  shift 43
	'-'  shift 44
	.  error


state 38
	sentencia_ejec : if '(' cond . ')' then bloque_if  (10)

	')'  shift 56
	.  error


state 39
	cond : expresion . comparador expresion  (20)
	expresion : expresion . '+' termino  (35)
	expresion : expresion . '-' termino  (36)

	'<'  shift 57
	'>'  shift 58
	'='  shift 59
	'!'  shift 60
	'+'  shift 43
	'-'  shift 44
	.  error

	comparador  goto 61


state 40
	sentencia_ejec : print '(' cadena . ')' ';'  (11)

	')'  shift 62
	.  error


state 41
	expresion : expresion . '+' termino  (35)
	expresion : expresion . '-' termino  (36)
	factor : '(' expresion . ')'  (43)

	')'  shift 63
	'+'  shift 43
	'-'  shift 44
	.  error


state 42
	sentencia_ejec : return expresion ';' .  (13)

	.  reduce 13


state 43
	expresion : expresion '+' . termino  (35)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	termino  goto 64
	factor  goto 27


state 44
	expresion : expresion '-' . termino  (36)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	termino  goto 65
	factor  goto 27


state 45
	termino : termino '*' . factor  (38)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	factor  goto 66


state 46
	termino : termino '/' . factor  (39)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	factor  goto 67


state 47
	sentencia_declar_funcion : function ID '(' . parametros ')' bloque_funcion  (27)

	uint  shift 8
	.  error

	tipo  goto 68
	parametros  goto 69


state 48
	lista_sent : sentencia lista_sent .  (5)

	.  reduce 5


state 49
	bloque_funcion : begin lista_sent end .  (33)

	.  reduce 33


state 50
	sentencia_ejec : loop bloque_sent until . cond  (14)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	cond  goto 70
	expresion  goto 39
	termino  goto 26
	factor  goto 27


state 51
	lista_var : ID ';' .  (17)

	.  reduce 17


state 52
	lista_var : ID lista_var .  (16)

	.  reduce 16


state 53
	sentencia_ejec : ID '(' lista_parametros ')' . ';'  (12)

	';'  shift 71
	.  error


state 54
	lista_parametros : parametro lista_parametros .  (30)

	.  reduce 30


state 55
	asignacion : ID '=' expresion ';' .  (34)

	.  reduce 34


state 56
	sentencia_ejec : if '(' cond ')' . then bloque_if  (10)

	then  shift 72
	.  error


state 57
	comparador : '<' .  (21)
	comparador : '<' . '='  (23)

	'='  shift 73
	ID  reduce 21
	CTE  reduce 21
	'('  reduce 21


state 58
	comparador : '>' .  (22)
	comparador : '>' . '='  (24)

	'='  shift 74
	ID  reduce 22
	CTE  reduce 22
	'('  reduce 22


state 59
	comparador : '=' . '='  (25)

	'='  shift 75
	.  error


state 60
	comparador : '!' . '='  (26)

	'='  shift 76
	.  error


state 61
	cond : expresion comparador . expresion  (20)

	ID  shift 22
	CTE  shift 23
	'('  shift 24
	.  error

	expresion  goto 77
	termino  goto 26
	factor  goto 27


state 62
	sentencia_ejec : print '(' cadena ')' . ';'  (11)

	';'  shift 78
	.  error


state 63
	factor : '(' expresion ')' .  (43)

	.  reduce 43


state 64
	expresion : expresion '+' termino .  (35)
	termino : termino . '*' factor  (38)
	termino : termino . '/' factor  (39)

	'*'  shift 45
	'/'  shift 46
	$end  reduce 35
	ID  reduce 35
	if  reduce 35
	else  reduce 35
	print  reduce 35
	return  reduce 35
	end  reduce 35
	loop  reduce 35
	until  reduce 35
	uint  reduce 35
	')'  reduce 35
	';'  reduce 35
	'<'  reduce 35
	'>'  reduce 35
	'='  reduce 35
	'!'  reduce 35
	'+'  reduce 35
	'-'  reduce 35


state 65
	expresion : expresion '-' termino .  (36)
	termino : termino . '*' factor  (38)
	termino : termino . '/' factor  (39)

	'*'  shift 45
	'/'  shift 46
	$end  reduce 36
	ID  reduce 36
	if  reduce 36
	else  reduce 36
	print  reduce 36
	return  reduce 36
	end  reduce 36
	loop  reduce 36
	until  reduce 36
	uint  reduce 36
	')'  reduce 36
	';'  reduce 36
	'<'  reduce 36
	'>'  reduce 36
	'='  reduce 36
	'!'  reduce 36
	'+'  reduce 36
	'-'  reduce 36


state 66
	termino : termino '*' factor .  (38)

	.  reduce 38


state 67
	termino : termino '/' factor .  (39)

	.  reduce 39


state 68
	parametros : tipo . parametro  (28)
	parametros : tipo . parametro parametros  (29)

	ID  shift 34
	.  error

	parametro  goto 79


state 69
	sentencia_declar_funcion : function ID '(' parametros . ')' bloque_funcion  (27)

	')'  shift 80
	.  error


state 70
	sentencia_ejec : loop bloque_sent until cond .  (14)

	.  reduce 14


state 71
	sentencia_ejec : ID '(' lista_parametros ')' ';' .  (12)

	.  reduce 12


state 72
	sentencia_ejec : if '(' cond ')' then . bloque_if  (10)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	begin  shift 6
	loop  shift 7
	uint  shift 8
	.  error

	bloque_sent  goto 81
	sentencia  goto 12
	bloque_funcion  goto 13
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	bloque_if  goto 82
	tipo  goto 17


state 73
	comparador : '<' '=' .  (23)

	.  reduce 23


state 74
	comparador : '>' '=' .  (24)

	.  reduce 24


state 75
	comparador : '=' '=' .  (25)

	.  reduce 25


state 76
	comparador : '!' '=' .  (26)

	.  reduce 26


state 77
	cond : expresion comparador expresion .  (20)
	expresion : expresion . '+' termino  (35)
	expresion : expresion . '-' termino  (36)

	'+'  shift 43
	'-'  shift 44
	$end  reduce 20
	ID  reduce 20
	if  reduce 20
	else  reduce 20
	print  reduce 20
	return  reduce 20
	end  reduce 20
	loop  reduce 20
	until  reduce 20
	uint  reduce 20
	')'  reduce 20


state 78
	sentencia_ejec : print '(' cadena ')' ';' .  (11)

	.  reduce 11


state 79
	parametros : tipo parametro .  (28)
	parametros : tipo parametro . parametros  (29)

	uint  shift 8
	')'  reduce 28

	tipo  goto 68
	parametros  goto 83


state 80
	sentencia_declar_funcion : function ID '(' parametros ')' . bloque_funcion  (27)

	begin  shift 6
	.  error

	bloque_funcion  goto 84


81: shift/reduce conflict (shift 85, reduce 18) on else
state 81
	bloque_if : bloque_sent .  (18)
	bloque_if : bloque_sent . else bloque_sent  (19)

	else  shift 85
	$end  reduce 18
	ID  reduce 18
	if  reduce 18
	print  reduce 18
	return  reduce 18
	end  reduce 18
	loop  reduce 18
	until  reduce 18
	uint  reduce 18


state 82
	sentencia_ejec : if '(' cond ')' then bloque_if .  (10)

	.  reduce 10


state 83
	parametros : tipo parametro parametros .  (29)

	.  reduce 29


state 84
	sentencia_declar_funcion : function ID '(' parametros ')' bloque_funcion .  (27)

	.  reduce 27


state 85
	bloque_if : bloque_sent else . bloque_sent  (19)

	ID  shift 1
	if  shift 2
	print  shift 3
	return  shift 4
	begin  shift 6
	loop  shift 7
	uint  shift 8
	.  error

	bloque_sent  goto 86
	sentencia  goto 12
	bloque_funcion  goto 13
	sentencia_ejec  goto 14
	sentencia_declarativa_tipo  goto 15
	asignacion  goto 16
	tipo  goto 17


state 86
	bloque_if : bloque_sent else bloque_sent .  (19)

	.  reduce 19


State 81 contains 1 shift/reduce conflict.


27 terminals, 21 nonterminals
45 grammar rules, 87 states
